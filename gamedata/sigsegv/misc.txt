// miscellaneous

"Games"
{
	"#default"
	{
		"#supported"
		{
			engine "tf2"
			engine "css"
			engine "ep1"
			engine "ep2"
			engine "hl2dm"
			engine "dods"
			engine "sdk2013"
			engine "l4d"
			engine "nd"
			engine "l4d2"
			engine "blade"
			engine "insurgency"
			engine "contagion"
			engine "bms"
			engine "doi"
			engine "pkvii"
		}
		
		"sigsegv"
		{
			"addrs"
			{
				
				
				"CalcDistanceToLineSegment"
				{
					type "sym"
					sym  "_Z25CalcDistanceToLineSegmentRK6VectorS1_S1_Pf"
				}
				
				"CreateEntityByName"
				{
					type   "func ebpprologue unistr"
					sym    "_Z18CreateEntityByNamePKci"
					unistr "CreateEntityByName( %s, %d ) - CreateEdict failed."
				}
				
				"TranslateWeaponEntForClass"
				{
					type   "func ebpprologue uniref"
					sym    "_Z26TranslateWeaponEntForClassPKci"
					uniref "pszWpnEntTranslationList"
				}
				"CTFGameRules::PushAllPlayersAway"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18PushAllPlayersAwayERK6VectorffiP10CUtlVectorIP9CTFPlayer10CUtlMemoryIS5_iEE"
				}
				
				"CFuncNavCost::IsApplicableTo"
				{
					type   "func ebpprologue unistr"
					sym    "_ZNK12CFuncNavCost14IsApplicableToEP20CBaseCombatCharacter"
					unistr "mission_sniper"
					// alt: "mission_spy"
					// alt: "mission_sentry_buster"
				}
				
				
				"CBulletPenetrateEnum::EnumEntity"
				{
					type   "func knownvtidx"
					sym    "_ZN20CBulletPenetrateEnum10EnumEntityEP13IHandleEntity"
					vtable ".?AVCBulletPenetrateEnum@@"
					idx    "0x00"
				}
				
				"CAttributeManager::AttribHookValue<int>"
				{
					type "pattern"
					sym  "_ZN17CAttributeManager15AttribHookValueIiEET_S1_PKcPK11CBaseEntityP10CUtlVectorIPS4_10CUtlMemoryIS8_iEEb"
					seg  "text"
					seek "558bec83ec248b0d8cc26a105333db895ddc895de08b4108895df0895df45785c0743e6894106f1068b8106f106890806c10683c1e92106a7768c8106f10535353538d4ddc5150"
					mask "ffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff00000000ff00000000ff00000000ff00000000ffffff00000000ffffffffffffffffff"
				}
				"CAttributeManager::AttribHookValue<float>"
				{
					type "pattern"
					sym  "_ZN17CAttributeManager15AttribHookValueIfEET_S1_PKcPK11CBaseEntityP10CUtlVectorIPS4_10CUtlMemoryIS8_iEEb"
					seg  "text"
					
					seek "558bec83ec288b0d8cc26a105333db895dd8895ddc8b4108895dec895df05685c0743e6894106f1068b8106f106890806c1068481e92106a7768c8106f10535353538d4dd85150"
					mask "ffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff00000000ff00000000ff00000000ff00000000ffffff00000000ffffffffffffffffff"
				}
				"CAttributeManager::ApplyAttributeFloatWrapper"
				{
					type "sym"
					sym  "_ZN17CAttributeManager26ApplyAttributeFloatWrapperEfP11CBaseEntity8string_tP10CUtlVectorIS1_10CUtlMemoryIS1_iEE"
				}
				
				"CBaseServer::BroadcastMessage1"
				{
					type "sym"
					sym  "_ZN11CBaseServer16BroadcastMessageER11INetMessagebb"
					lib  "engine"
				}
				"CBaseServer::BroadcastMessage2"
				{
					type "sym"
					sym  "_ZN11CBaseServer16BroadcastMessageER11INetMessageR16IRecipientFilter"
					lib  "engine"
				}
				
				"SVC_UserMessage::WriteToBuffer"
				{
					type  "fixed"
					sym   "_ZN15SVC_UserMessage13WriteToBufferER8bf_write"
					addr  "0x1da230"
					build "3283568"
					lib   "engine"
				}
				"SVC_UserMessage::ReadFromBuffer"
				{
					type  "fixed"
					sym   "_ZN15SVC_UserMessage14ReadFromBufferER7bf_read"
					addr  "0x1d5920"
					build "3283568"
					lib   "engine"
				}
				
				"CMannVsMachineStats::SendUpgradesToPlayer"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats20SendUpgradesToPlayerEP9CTFPlayerP10CUtlVectorI12CUpgradeInfo10CUtlMemoryIS3_iEE"
				}
				
				"EvaluateConditional"
				{
					type "sym"
					sym  "_Z19EvaluateConditionalPKc"
				}
				
				"UTIL_GetListenServerHost"
				{
					type "sym"
					sym  "_Z24UTIL_GetListenServerHostv"
				}
				
				"[engine] CUtlBuffer::EnsureCapacity"
				{
					type  "fixed"
					sym   "_ZN10CUtlBuffer14EnsureCapacityEi"
					addr  "0x251b60"
					build "3283568"
					lib   "engine"
				}
				"[engine] bf_read::bf_read"
				{
					type  "fixed"
					sym   "_ZN7bf_readC1EPKcPKvii"
					addr  "0x253610"
					build "3283568"
					lib   "engine"
				}
				"[engine] bf_write::bf_write"
				{
					type  "fixed"
					sym   "_ZN8bf_writeC1EPvii"
					addr  "0x253690"
					build "3283568"
					lib   "engine"
				}
				
				"CDemoPlayer::ReadPacket"
				{
					type   "func ebpprologue unistr"
					sym    "_ZN11CDemoPlayer10ReadPacketEv"
					unistr "Tried to read a demo message with no demo file\n"
					lib    "engine"
				}
				"CHLTVServer::ReadCompeleteDemoFile"
				{
					type  "fixed"
					sym   "_ZN11CHLTVServer21ReadCompeleteDemoFileEv"
					addr  "0x19c2b0"
					build "3283568"
					lib   "engine"
				}
				"CDemoRecorder::RecordStringTables"
				{
					type   "func knownvtidx"
					sym    "_ZN13CDemoRecorder18RecordStringTablesEv"
					vtable ".?AVCDemoRecorder@@"
					idx    "0x0d"
					lib    "engine"
				}
				"CHLTVDemoRecorder::RecordStringTables"
				{
					type   "func knownvtidx"
					sym    "_ZN17CHLTVDemoRecorder18RecordStringTablesEv"
					vtable ".?AVCHLTVDemoRecorder@@"
					idx    "0x0d"
					lib    "engine"
				}
				"CReplayDemoRecorder::RecordStringTables"
				{
					type   "func knownvtidx"
					sym    "_ZN19CReplayDemoRecorder18RecordStringTablesEv"
					vtable ".?AVCReplayDemoRecorder@@"
					idx    "0x0d"
					lib    "engine"
				}
				
				"CTFGameRules::PlayerKilled"
				{
					type "sym"
					sym  "_ZN12CTFGameRules12PlayerKilledEP11CBasePlayerRK15CTakeDamageInfo"
				}
				"CTFGameRules::ShouldDropSpellPickup"
				{
					type "sym"
					sym  "_ZN12CTFGameRules21ShouldDropSpellPickupEv"
				}
				"CTFGameRules::DropSpellPickup"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules15DropSpellPickupERK6Vectori"
				}
				"CTFGameRules::IsUsingSpells"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules13IsUsingSpellsEv"
				}
				
				"KeyValues::LoadFromFile"
				{
					type "sym"
					sym  "_ZN9KeyValues12LoadFromFileEP15IBaseFileSystemPKcS3_b"
				}
				"KeyValues::MergeBaseKeys"
				{
					type "sym"
					sym  "_ZN9KeyValues13MergeBaseKeysER10CUtlVectorIPS_10CUtlMemoryIS1_iEE"
				}
				"KeyValues::RecursiveMergeKeyValues"
				{
					type "sym"
					sym  "_ZN9KeyValues23RecursiveMergeKeyValuesEPS_"
				}
				"KeyValues::LoadFromBuffer"
				{
					type "sym"
					sym  "_ZN9KeyValues14LoadFromBufferEPKcR10CUtlBufferP15IBaseFileSystemS1_"
				}
				
				
				"CUserMessages::LookupUserMessage"
				{
					type "sym"
					sym  "_ZN13CUserMessages17LookupUserMessageEPKc"
				}
				"CUserMessages::Register"
				{
					type "sym"
					sym  "_ZN13CUserMessages8RegisterEPKci"
				}
				
				"clear_debug_overlays"
				{
					type "sym"
					sym  "_ZL20clear_debug_overlaysRK8CCommand"
				}
				
				"ConColorMsg"
				{
					type "sym"
					sym  "_Z11ConColorMsgRK5ColorPKcz"
					lib  "tier0"
				}
				
				"CTFGameRules::RadiusDamage"
				{
					type "sym"
					sym  "_ZN12CTFGameRules12RadiusDamageER19CTFRadiusDamageInfo"
				}
				"CEntitySphereQuery::CEntitySphereQuery [C1]"
				{
					type "sym"
					sym  "_ZN18CEntitySphereQueryC1ERK6Vectorfi"
				}
				"CTFRadiusDamageInfo::ApplyToEntity"
				{
					type "sym"
					sym  "_ZN19CTFRadiusDamageInfo13ApplyToEntityEP11CBaseEntity"
				}
				
				
				
				"CMultiplayRules::VoiceCommand"
				{
					type "sym"
					sym  "_ZN15CMultiplayRules12VoiceCommandEP22CBaseMultiplayerPlayerii"
				}
				
				"UTIL_EntitiesInSphere"
				{
					type "sym"
					sym  "_Z21UTIL_EntitiesInSphereRK6VectorfP20CFlaggedEntitiesEnum"
				}
				
				"DispatchParticleEffect [overload 1]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityS0_b"
				}
				"DispatchParticleEffect [overload 2]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityib"
				}
				"DispatchParticleEffect [overload 3]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc6Vector6QAngleP11CBaseEntity"
				}
				"DispatchParticleEffect [overload 4]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc6VectorS1_6QAngleP11CBaseEntity"
				}
				"DispatchParticleEffect [overload 5]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffecti6VectorS_6QAngleP11CBaseEntity"
				}
				"DispatchParticleEffect [overload 6]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc20ParticleAttachment_tP11CBaseEntityS0_6VectorS4_bb"
				}
				"DispatchParticleEffect [overload 7]"
				{
					type "sym"
					sym  "_Z22DispatchParticleEffectPKc6Vector6QAngleS1_S1_bP11CBaseEntityi"
				}
				"StopParticleEffects"
				{
					type "sym"
					sym  "_Z19StopParticleEffectsP11CBaseEntity"
				}
				
				"IGameSystem::Add"
				{
					type  "pattern"
					sym   "_ZN11IGameSystem3AddEPS_"
					seg   "text"
					seek  "558bec518b1514d58b108b0d0cd58b10568bf28d42013bc17e142bd1b908d58b104252e8d89c1c008b1514d58b10a108d58b1042891514d58b102bd64aa318d58b1085d27e1d8d0cb08d04950000000050518d410450e8055b4200a108d58b1083c40c8d04b08b750885c0740289306a0068b0de8f1068c4dd8f106a0056e81170420083c41485c074118d45fc8975fc50b91cd58b10e835981c005e8be55dc3"
					mask  "ffffffffffff00000000ffff00000000ffffffffffffffffff00ffffff00000000ffffff00000000ffff00000000ff00000000ffffff00000000ffffffff00000000ffffff00ffffffffffffffffffffffffffffffffff00000000ff00000000ffffffffffffffffffffffff00ffffffffff00000000ff00000000ffffffff00000000ffffffffffff00ffffffffffffffff00000000ff00000000ffffffffff"
				}
				"IGameSystem::Remove"
				{
					type "pattern"
					sym  "_ZN11IGameSystem6RemoveEPS_"
					seg  "text"
					seek "558bec51568d4508b9b8148c1050e81dbb0a008b75086a00689020901068a41f90106a0056e84aed420083c41485c074118d45fc8975fc50b9cc148c10e8eeba0a005e8be55dc3"
					mask "ffffffffffffffffff00000000ffff00000000ffffffffffff00000000ff00000000ffffffff00000000ffffffffffffffffffffffffffffff00000000ff00000000ffffffffff"
				//	seek "558bec51568bf18d45fc50b908d58b108975fcc706387a6d10e8a29708006a0068b0de8f1068c4dd8f106a0056e8f271420083c41485c074118d45fc8975fc50b91cd58b10e8769708005e8be55dc3"
				//	mask "ffffffffffffffffffffffff00000000ffffffffff00000000ff00000000ffffff00000000ff00000000ffffffff00000000ffffffffffff00ffffffffffffffff00000000ff00000000ffffffffff"
				}
				
				"net_blocksize"
				{
					type "sym"
					sym  "net_blocksize"
					lib  "engine"
				}
				"net_maxroutable"
				{
					type "sym"
					sym  "net_maxroutable"
					lib  "engine"
				}
				"sv_maxroutable"
				{
					type "sym"
					sym  "_ZL14sv_maxroutable"
					lib  "engine"
				}
				"NET_SendPacket"
				{
					type "sym"
					sym  "_Z14NET_SendPacketP11INetChanneliRK8netadr_sPKhiP8bf_writeb"
					lib  "engine"
				}
				"NET_SendLong"
				{
					type "sym"
					sym  "_Z12NET_SendLongP11INetChanneliiPKciPK8sockaddrii"
					lib  "engine"
				}
				"NET_SendTo"
				{
					type "sym"
					sym  "_Z10NET_SendTobiPKciPK8sockaddrii"
					lib  "engine"
				}
				"CNetChan::GetMaxRoutablePayloadSize"
				{
					type "sym"
					sym  "_ZN8CNetChan25GetMaxRoutablePayloadSizeEv"
					lib  "engine"
				}
				
				"WeaponID_IsSniperRifle"
				{
					type "sym"
					sym  "_Z22WeaponID_IsSniperRiflei"
				}
				"WeaponID_IsSniperRifleOrBow"
				{
					type "sym"
					sym  "_Z27WeaponID_IsSniperRifleOrBowi"
				}
				
				"CTFGameRules::ApplyOnDamageAliveModifyRules"
				{
					type "sym"
					sym  "_ZN12CTFGameRules29ApplyOnDamageAliveModifyRulesERK15CTakeDamageInfoP11CBaseEntityRNS_20DamageModifyExtras_tE"
				}
				
				"NextBotTraversableTraceFilter::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN29NextBotTraversableTraceFilter15ShouldHitEntityEP13IHandleEntityi"
				}
				
				"GetItemSchema"
				{
					type "sym"
					sym  "_Z13GetItemSchemav"
				}
				"CTFGameRules::CanUpgradeWithAttrib"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20CanUpgradeWithAttribEP9CTFPlayeritP22CMannVsMachineUpgrades"
				}
				"CTFGameRules::GetCostForUpgrade"
				{
					type "sym"
					sym  "_ZN12CTFGameRules17GetCostForUpgradeEP22CMannVsMachineUpgradesiiP9CTFPlayer"
				}
				"CTFGameRules::GetUpgradeTier"
				{
					type "sym"
					sym  "_ZN12CTFGameRules14GetUpgradeTierEi"
				}
				"CTFGameRules::IsUpgradeTierEnabled"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20IsUpgradeTierEnabledEP9CTFPlayerii"
				}
				
				"CMannVsMachineStats::GetUpgradeSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats18GetUpgradeSpendingEP9CTFPlayer"
				}
				"CMannVsMachineStats::GetBottleSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats17GetBottleSpendingEP9CTFPlayer"
				}
				"CMannVsMachineStats::GetBuyBackSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats18GetBuyBackSpendingEP9CTFPlayer"
				}
				"CMannVsMachineStats::ResetUpgradeSpending"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats20ResetUpgradeSpendingEP9CTFPlayer"
				}
				
				"CGameRules::GetViewVectors"
				{
					type "sym"
					sym  "_ZNK10CGameRules14GetViewVectorsEv"
				}
				
				
				
				"CTraceFilterSimple::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN18CTraceFilterSimple15ShouldHitEntityEP13IHandleEntityi"
				}
				
				"SendProxy_UInt8ToInt32"
				{
					type "sym"
					sym  "_Z22SendProxy_UInt8ToInt32PK8SendPropPKvS3_P8DVariantii"
				}
				
				"CTFGameRules::PlayerReadyStatus_UpdatePlayerState"
				{
					type "sym"
					sym  "_ZN12CTFGameRules35PlayerReadyStatus_UpdatePlayerStateEP9CTFPlayerb"
				}
				"CTFGameRules::PlayerReadyStatus_HaveMinPlayersToEnable"
				{
					type "sym"
					sym  "_ZN12CTFGameRules40PlayerReadyStatus_HaveMinPlayersToEnableEv"
				}
				
				"CTFGameRules::ClientDisconnected"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18ClientDisconnectedEP7edict_t"
				}
				
//				"CTeamplayRoundBasedRules::GetAllPlayersLobbyInfo"
//				{
//					type "sym"
//					sym  "_ZN24CTeamplayRoundBasedRules22GetAllPlayersLobbyInfoER10CUtlVectorI17LobbyPlayerInfo_t10CUtlMemoryIS1_iEEb"
//				}
				
				"CMannVsMachineStats::RoundEvent_WaveEnd"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats18RoundEvent_WaveEndEb"
				}
				
				
				
//				"CRConClient::SendCmd"
//				{
//					type "pattern"
//					sym  "_ZN11CRConClient7SendCmdEPKc"
//					seg  "text"
//					seek "558bec83ec30538bd956578d4b34e8dd86fdff85c07f336a018d7b5c578d4b34e84baf070085c079216a008bcf"
//					mask "ffffffffffffffffffffffffffffff00000000ffffff00ffffffffffffffffffff00000000ffffff00ffffffff"
//					lib  "engine"
//				}
				
				"CRConClient::SendResponse"
				{
					type "pattern"
					sym  "_ZN11CRConClient12SendResponseER10CUtlBufferb"
					seg  "text"
					seek "558bec807d0c00538bd9742f807b70007529e819e9ffff8d4b34e8118dfdff85c07e5c8b45088d8ba4000000ff701cff30e8ba0019005b5dc20800"
					mask "ffffffffffffffffffffff00ffffffffff00ff00000000ffffffff00000000ffffff00ffffffffffffffffffffffffffffff00000000ffffffffff"
					lib  "engine"
				}
				"CRConClient::BuildResponse"
				{
					type "pattern"
					sym  "_ZN11CRConClient13BuildResponseER10CUtlBuffer23ServerDataRequestType_tPKcS4_"
					seg  "text"
					seek "558bec568b7508578bf96a00f646150175098bcee867f31100eb0e682c652f1056e84a15190083c40c"
					mask "ffffffffffffffffffffffffffffffffff00ffffff00000000ff00ff00000000ffff00000000ffffff"
					lib  "engine"
				}
				
				"CServerRemoteAccess::SendVProfData"
				{
					type "sym"
					sym  "_ZN19CServerRemoteAccess13SendVProfDataEjbPvi"
					lib  "engine"
				}
				
				"WriteRemoteVProfData"
				{
					type "sym"
					sym  "_Z20WriteRemoteVProfDatav"
					lib  "engine"
				}
				
				"CVProfRecorder::Record_WriteTimings_R"
				{
					type "sym"
					sym  "_ZN14CVProfRecorder21Record_WriteTimings_REPK10CVProfNode"
					lib  "engine"
				}
				
				"CVProfNode::MarkFrame"
				{
					type "sym"
					sym  "_ZN10CVProfNode9MarkFrameEv"
					lib  "tier0"
				}
				
				"VProfRecord_Snapshot"
				{
					type "pattern"
					sym  "_Z20VProfRecord_Snapshotv"
					seg  "text"
					seek "a19cf3651083f801750ab9a0d96510e9dcfaffff83f8027517803dc4f3651000750e6a006affb9a0d96510e8c0f1ffffc3"
					mask "ff00000000ffffffffffff00000000ff00000000ffffffffffffff00000000ffffffffffffffff00000000ff00000000ff"
					lib  "engine"
				}
				
				"VProfRecord_StartOrStop"
				{
					type "pattern"
					sym  "_Z23VProfRecord_StartOrStopv"
					seg  "text"
					seek "803d04913c100074288b0d60052f10ff810c10000083b90c10000001750c81c118100000ff1544062f10c60504913c1000803d05913c100074218b0d60052f10ff890c100000750c81c118100000ff1540062f10c60505913c1000c3"
					mask "ffff00000000ffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffff00000000ffff00000000ffffff00000000ffffffffff00000000ffffffffffffffffffffffffffffffff00000000ffff00000000ffff"
					lib  "engine"
					
					// WARNING:
					// the windows pattern is actually for VProfExport_StartOrStop
					
					// also, this is broken after the Feb 2017 toolchain update
					// (why the hell is VProfRecord_StartOrStop in two noncontiguous chunks in the win build? WHY?)
				}
				
				"CTFGameMovement::ProcessMovement"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement15ProcessMovementEP11CBasePlayerP9CMoveData"
				}
				
				"CUtlConstStringBase<char>::Set"
				{
					type "sym"
					sym  "_ZN19CUtlConstStringBaseIcE3SetEPKc"
				}
				
//				"GlobalAttrModifier_TFHalloweenAttribHookMunger"
//				{
//					type   "func ebpprologue unistr"
//					sym    "_ZL46GlobalAttrModifier_TFHalloweenAttribHookMungerPKcP19CUtlConstStringBaseIcE"
//					unistr "%s__halloween"
//				}
				
//				"GlobalAttrModifier_MvMAttribHookMunger"
//				{
//					type   "func ebpprologue unistr"
//					sym    "_ZL38GlobalAttrModifier_MvMAttribHookMungerPKcP19CUtlConstStringBaseIcE"
//					unistr "%s__mvm"
//				}
				
				"V_vsnprintfRet"
				{
					type "pattern"
					sym  "_Z14V_vsnprintfRetPciPKcS_Pb"
					seg  "text"
					seek "558bec568b750c57ff75148b7d08ff75105657e8003601008b551883c41085d2741385c078083bc67d0433c9eb05b901000000880a85c078043bc67c07c64437ff008bc65f5e5dc3"
					mask "ffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
				}
				
				"CRecipientFilter::RemoveRecipientsByPVS"
				{
					type "sym"
					sym  "_ZN16CRecipientFilter21RemoveRecipientsByPVSERK6Vector"
				}
				
				"SV_ReplicateConVarChange"
				{
					type "sym"
					sym  "_Z24SV_ReplicateConVarChangePK6ConVarPKc"
					lib  "engine"
				}
				
				"CTraceFilterDeflection::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN22CTraceFilterDeflection15ShouldHitEntityEP13IHandleEntityi"
				}
				
				"CLagCompensationManager::StartLagCompensation"
				{
					type "sym"
					sym  "_ZN23CLagCompensationManager20StartLagCompensationEP11CBasePlayerP8CUserCmd"
				}
				"CLagCompensationManager::FinishLagCompensation"
				{
					type "sym"
					sym  "_ZN23CLagCompensationManager21FinishLagCompensationEP11CBasePlayer"
				}
				
				"Physics_RunThinkFunctions"
				{
					type "sym"
					sym  "_Z25Physics_RunThinkFunctionsb"
				}
				
				"Physics_SimulateEntity"
				{
					type "sym"
					sym  "_Z22Physics_SimulateEntityP11CBaseEntity"
				}
				
				"CTFGameRules::CalcDominationAndRevenge"
				{
					type "sym"
					sym  "_ZN12CTFGameRules24CalcDominationAndRevengeEP9CTFPlayerP11CBaseEntityS1_bPi"
				}
				
				"CNetChan::SendNetMsg"
				{
					type "sym"
					sym  "_ZN8CNetChan10SendNetMsgER11INetMessagebb"
					lib  "engine"
				}
				
				"FindHullIntersection"
				{
					type "sym"
					sym  "_Z20FindHullIntersectionRK6VectorR10CGameTraceS1_S1_P11CBaseEntity"
				}
				
				"CGameRules::ShouldCollide"
				{
					type "sym"
					sym  "_ZN10CGameRules13ShouldCollideEii"
				}
				
				"PassServerEntityFilter"
				{
					type "sym"
					sym  "_Z22PassServerEntityFilterPK13IHandleEntityS1_"
				}
				
				"StandardFilterRules"
				{
					type "sym"
					sym  "_Z19StandardFilterRulesP13IHandleEntityi"
				}
				
				"IsSpaceToSpawnHere"
				{
					type "sym"
					sym  "_Z18IsSpaceToSpawnHereRK6Vector"
				}
				
				"TeleportNearVictim"
				{
					type "sym"
					sym  "_Z18TeleportNearVictimP6CTFBotP9CTFPlayeri"
				}
				
				"CPackedStore::OpenFile"
				{
					type "sym"
					sym  "_ZN12CPackedStore8OpenFileEPKc"
					lib  "dedicated"
					// it's in dedicated_srv.so on ServerLinux
					// but in filesystem_stdio.* elsewhere
				}
				
				"CBaseFileSystem::FileExists"
				{
					type "sym"
					sym  "_ZN15CBaseFileSystem10FileExistsEPKcS1_"
					lib  "dedicated"
					// it's in dedicated_srv.so on ServerLinux
					// but in filesystem_stdio.* elsewhere
				}
				
				"CBaseFileSystem::LoadKeyValues"
				{
					type "sym"
					sym  "_ZN15CBaseFileSystem13LoadKeyValuesER9KeyValuesN11IFileSystem22KeyValuesPreloadType_tEPKcS5_"
					lib  "dedicated"
				}
				
				"CTFGameRules::SetNextMvMPopfile"
				{
					type "sym"
					sym  "_ZN12CTFGameRules17SetNextMvMPopfileEPKc"
				}
				
				"CTFGameMovement::CheckStuck"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement10CheckStuckEv"
				}
				
				"SetDebugBits"
				{
					type "sym"
					sym  "_Z12SetDebugBitsP11CBasePlayerPKci"
				}
				
				"GetNextCommandEntity"
				{
					type "sym"
					sym  "_Z20GetNextCommandEntityP11CBasePlayerPKcP11CBaseEntity"
				}
				
				"DrawAllDebugOverlays"
				{
					type "sym"
					sym  "_Z20DrawAllDebugOverlaysv"
				}
				
				"CTFGameRules::FPlayerCanTakeDamage"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20FPlayerCanTakeDamageEP11CBasePlayerP11CBaseEntityRK15CTakeDamageInfo"
				}
				
				"CTFGameRules::GetCurrentMatchGroup"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules20GetCurrentMatchGroupEv"
				}
				
				"MapEntity_ParseAllEntities"
				{
					type "sym"
					sym  "_Z26MapEntity_ParseAllEntitiesPKcP16IMapEntityFilterb"
				}
				"MapEntity_ParseEntity"
				{
					type "sym"
					sym  "_Z21MapEntity_ParseEntityRP11CBaseEntityPKcP16IMapEntityFilter"
				}
				"MapEntity_ParseToken"
				{
					type "sym"
					sym  "_Z20MapEntity_ParseTokenPKcPc"
				}
				
				"CTFGameRules::DropHalloweenSoulPack"
				{
					type "sym"
					sym  "_ZN12CTFGameRules21DropHalloweenSoulPackEiRK6VectorP11CBaseEntityi"
				}
				
				"SVC_CmdKeyValues::Process"
				{
					type   "func knownvtidx"
					sym    "_ZN16SVC_CmdKeyValues7ProcessEv"
					vtable ".?AVSVC_CmdKeyValues@@"
					idx    "0x03"
					lib    "engine"
				}
				"CL_TakeSnapshotAndSwap"
				{
					type   "func ebpprologue unistr"
					sym    "_Z22CL_TakeSnapshotAndSwapv"
					unistr "CL_TakeSnapshotAndSwap"
					lib    "engine"
				}
				
				"CVideoMode_Common::TakeSnapshotTGA"
				{
					type   "func ebpprologue nonunistr knownvtidx"
					sym    "_ZN17CVideoMode_Common15TakeSnapshotTGAEPKc"
					str    "Couldn't write bitmap data snapshot to file %s.\n"
					vtable ".?AVCVideoMode_Common@@"
					idx    "0x18"
					lib    "engine"
				}
				"CTFGameRules::IsPVEModeControlled"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules19IsPVEModeControlledEP11CBaseEntity"
				}
				
				
				"SendProxy_LengthTable"
				{
					type "pattern"
					sym  "_Z21SendProxy_LengthTablePK8SendPropPKvS3_P20CSendProxyRecipientsi"
					seg  "text"
					seek "558bec8b45088b404cff7014ff70108b4008ff750cffd08b451083c40c5dc3"
					mask "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
				}
				"Con_ColorPrint"
				{
					type "sym"
					sym  "_Z15Con_ColorPrintfRK5ColorPKcz"
					lib  "engine"
				}
				
				"AllocPooledString"
				{
					type "sym"
					sym  "_Z17AllocPooledStringPKc"
				}
				"AllocPooledString_StaticConstantStringPointer"
				{
					type "sym"
					sym  "_Z45AllocPooledString_StaticConstantStringPointerPKc"
				}
				"FindPooledString"
				{
					type "sym"
					sym  "_Z16FindPooledStringPKc"
				}
				"GameStringSystem"
				{
					type "sym"
					sym  "_Z16GameStringSystemv"
				}
				
				"CEventQueue::AddEvent [EventQueuePrioritizedEvent_t *]"
				{
					type "sym"
					sym  "_ZN11CEventQueue8AddEventEP28EventQueuePrioritizedEvent_t"
				}
				
				"CEventQueue::ServiceEvents"
				{
					type "sym"
					sym  "_ZN11CEventQueue13ServiceEventsEv"
				}

				"CTFGameRules::BetweenRounds_Start"
				{
					type "sym"
					sym  "_ZN12CTFGameRules19BetweenRounds_StartEv"
				}
				
				"tf_mvm_popfile"
				{
					type "sym"
					sym  "_ZL14tf_mvm_popfileRK8CCommand"
				}
				
				"CTeamplayRoundBasedRules::State_Enter"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules11State_EnterE22gamerules_roundstate_t"
				}
				
				"CTeamplayRoundBasedRules::State_Leave"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules11State_LeaveEv"
				}
				
				"GetWeaponId"
				{
					type "sym"
					sym  "_Z11GetWeaponIdPKc"
				}
				"WeaponIdToAlias"
				{
					type "sym"
					sym  "_Z15WeaponIdToAliasi"
				}
				
				"CTFGameRules::ApplyOnDamageModifyRules"
				{
					type "sym"
					sym  "_ZN12CTFGameRules24ApplyOnDamageModifyRulesER15CTakeDamageInfoP11CBaseEntityb"
				}
				"CTakeDamageInfo::CTakeDamageInfo [C1 | overload 5]"
				{
					type "sym"
					sym  "_ZN15CTakeDamageInfoC1EP11CBaseEntityS1_S1_RK6VectorS4_fiiPS2_"
				}
				
				"CTraceFilterSimple::CTraceFilterSimple [C1]"
				{
					type "sym"
					sym  "_ZN18CTraceFilterSimpleC1EPK13IHandleEntityiPFbPS0_iE"
				}
				"PointInRespawnRoom"
				{
					type "sym"
					sym  "_Z18PointInRespawnRoomPK11CBaseEntityRK6Vectorb"
				}
				"CheckValveSignature"
				{
					type "sym"
					sym  "_Z19CheckValveSignaturePKvjS0_j"
				}
				
				"CTeamplayRoundBasedRules::GetMinTimeWhenPlayerMaySpawn"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules28GetMinTimeWhenPlayerMaySpawnEP11CBasePlayer"
				}
				
				"CTeamplayRoundBasedRules::GetNextRespawnWave"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules18GetNextRespawnWaveEiP11CBasePlayer"
				}
				
				"CMultiPlayerAnimState::OnNewModel"
				{
					type "sym"
					sym  "_ZN21CMultiPlayerAnimState10OnNewModelEv"
				}
				
				"CTFGameRules::GetTeamAssignmentOverride"
				{
					type "sym"
					sym  "_ZN12CTFGameRules25GetTeamAssignmentOverrideEP9CTFPlayerib"
				}
				
				"CStudioHdr::GetNumPoseParameters"
				{
					type "sym"
					sym  "_ZNK10CStudioHdr20GetNumPoseParametersEv"
				}
				
				"CStudioHdr::pPoseParameter"
				{
					type "sym"
					sym  "_ZN10CStudioHdr14pPoseParameterEi"
				}
				
				"CTFGameRules::ClientCommandKeyValues"
				{
					type "sym"
					sym  "_ZN12CTFGameRules22ClientCommandKeyValuesEP7edict_tP9KeyValues"
				}
				
				"CPlayerMove::StartCommand"
				{
					type "sym"
					sym  "_ZN11CPlayerMove12StartCommandEP11CBasePlayerP8CUserCmd"
				}
				
				"CTFGameRules::DistributeCurrencyAmount"
				{
					type "sym"
					sym  "_ZN12CTFGameRules24DistributeCurrencyAmountEiP9CTFPlayerbbb"
				}
				
				"Con_NPrintf"
				{
					type "sym"
					sym  "_Z11Con_NPrintfiPKcz"
					lib  "engine"
				}
				"IVEngineServer::Con_NPrintf"
				{
					type "sym"
					sym  "_ZN14CVEngineServer11Con_NPrintfEiPKcz"
					lib  "engine"
				}
				"IVEngineServer::Con_NXPrintf"
				{
					type "sym"
					sym  "_ZN14CVEngineServer12Con_NXPrintfEPK12con_nprint_sPKcz"
					lib  "engine"
				}
				
				"CTeamplayRoundBasedRules::State_Transition"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules16State_TransitionE22gamerules_roundstate_t"
				}
				
				"UTIL_GetHolidayForString"
				{
					type "sym"
					sym  "_Z24UTIL_GetHolidayForStringPKc"
				}
				
				"UTIL_IsHolidayActive"
				{
					type "sym"
					sym  "_Z20UTIL_IsHolidayActivei"
				}
				
				
				
				"Con_DebugLog"
				{
					type "sym"
					sym  "_Z12Con_DebugLogPKcz"
					lib  "engine"
				}
				
				"CanScatterGunKnockBack"
				{
					type "sym"
					sym  "_Z22CanScatterGunKnockBackP13CTFWeaponBaseff"
				}
				
				"CheckMedicResist"
				{
					type "sym regex"
					sym  "_ZL16CheckMedicResist7ETFCondS_P9CTFPlayerfRfbS2_\\.isra\\..*"
				}
				"CTFItem::GetItemID"
				{
					type "sym"
					sym  "_ZNK7CTFItem9GetItemIDEv"
				}
				
				"CTFGameRules::FlagsMayBeCapped"
				{
					type "sym"
					sym  "_ZN12CTFGameRules16FlagsMayBeCappedEv"
				}
				
				
				
				"CTFGameRules::SetWinningTeam"
				{
					type "sym"
					sym  "_ZN12CTFGameRules14SetWinningTeamEiibbbb"
				}
				
				"CTFGameRules::FireGameEvent"
				{
					type "sym"
					sym  "_ZN12CTFGameRules13FireGameEventEP10IGameEvent"
				}
				
				"CSteamID::Render [static]"
				{
					type "sym"
					sym  "_ZN8CSteamID6RenderEy"
				}
				"CSteamID::Render [member]"
				{
					type "sym"
					sym  "_ZNK8CSteamID6RenderEv"
				}
				
				"CTFItemDefinition::GetLoadoutSlot"
				{
					type "sym"
					sym  "_ZNK17CTFItemDefinition14GetLoadoutSlotEi"
				}
				"ItemGeneration"
				{
					type "sym"
					sym  "_Z14ItemGenerationv"
				}
				"CTFGameRules::SetCustomUpgradesFile"
				{
					type "sym"
					sym  "_ZN12CTFGameRules21SetCustomUpgradesFileER11inputdata_t"
				}
				"CollectPlayers<CTFPlayer>"
				{
					type "sym"
					sym  "_Z14CollectPlayersI9CTFPlayerEiP10CUtlVectorIPT_10CUtlMemoryIS3_iEEibb"
				}
				"DataTable_Warning"
				{
					type "sym"
					sym  "_Z17DataTable_WarningPKcz"
					lib  "engine"
				}
				
				"CopyStringAttributeValueToCharPointerOutput"
				{
					type "sym"
					sym  "_Z43CopyStringAttributeValueToCharPointerOutputPK17CAttribute_StringPPKc"
				}
				"CServerGameDLL::ServerActivate"
				{
					type "sym"
					sym  "_ZN14CServerGameDLL14ServerActivateEP7edict_tii"
				}
				
				"CMapListManager::RefreshList"
				{
					type "sym"
					sym  "_ZN15CMapListManager11RefreshListEv"
					lib  "engine"
				}
				"CMapListManager::GetMapCount"
				{
					type "sym"
					sym  "_ZNK15CMapListManager11GetMapCountEv"
					lib  "engine"
				}
				"CMapListManager::IsMapValid"
				{
					type "sym"
					sym  "_ZNK15CMapListManager10IsMapValidEi"
					lib  "engine"
				}
				"CMapListManager::GetMapName"
				{
					type "sym"
					sym  "_ZNK15CMapListManager10GetMapNameEi"
					lib  "engine"
				}
				
				"Cbuf_Execute"
				{
					type "sym"
					sym  "_Z12Cbuf_Executev"
					lib  "engine"
				}
				"PrecachePointTemplates"
				{
					type "sym"
					sym  "_Z22PrecachePointTemplatesv"
				}
				
				
				
				"CEventQueue::AddEvent"
				{
					type "sym"
					sym  "_ZN11CEventQueue8AddEventEPKcS1_9variant_tfP11CBaseEntityS4_i"
				}
				
				
				
				"TE_TFParticleEffect"
				{
					type "sym"
					sym  "_Z19TE_TFParticleEffectR16IRecipientFilterfPKc6Vector6QAngleP11CBaseEntity20ParticleAttachment_t"
				}
				"TE_TFParticleEffectComplex"
				{
					type "sym"
					sym  "_Z26TE_TFParticleEffectComplexR16IRecipientFilterfPKc6Vector6QAngleP31te_tf_particle_effects_colors_tP38te_tf_particle_effects_control_point_tP11CBaseEntity20ParticleAttachment_tS3_"
				}
				"TE_TFParticleEffect [No attachment]"
				{
					type "sym"
					sym  "_Z19TE_TFParticleEffectR16IRecipientFilterfPKc6VectorS3_6QAngleP11CBaseEntity"
				}
				
				"DoTeleporterOverride"
				{
					type "sym"
					sym  "_Z20DoTeleporterOverrideP11CBaseEntityR6Vectorb"
				}
				"CTFGameRules::OnPlayerSpawned"
				{
					type "sym"
					sym  "_ZN12CTFGameRules15OnPlayerSpawnedEP9CTFPlayer"
				}
				
				"CBaseIssue::CBaseIssue"
				{
					type "sym"
					sym  "_ZN10CBaseIssueC1EPKc"
				}
				"UserMessageBegin"
				{
					type "sym"
					sym  "_Z16UserMessageBeginR16IRecipientFilterPKc"
				}
				"MessageWriteString"
				{
					type "sym"
					sym  "_Z18MessageWriteStringPKc"
				}
				
				
				"CPlayerInventory::GetInventoryItemByItemID"
				{
					type "sym"
					sym  "_ZN16CPlayerInventory24GetInventoryItemByItemIDEyPi"
				}
				"CSchemaFieldHandle<CEconItemDefinition>::CSchemaFieldHandle"
				{
					type "sym"
					sym  "_ZN18CSchemaFieldHandleI19CEconItemDefinitionEC1EPKc"
				}
				"CSchemaFieldHandle<CEconItemDefinition>::CSchemaFieldHandle2"
				{
					type "sym"
					sym  "_ZN18CSchemaFieldHandleI19CEconItemDefinitionEC2EPKc"
				}
				
				"CTraceFilterIgnoreFriendlyCombatItems::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN37CTraceFilterIgnoreFriendlyCombatItems15ShouldHitEntityEP13IHandleEntityi"
				}
				"CTFGameRules::ClientConnected"
				{
					type "sym"
					sym  "_ZN12CTFGameRules15ClientConnectedEP7edict_tPKcS3_Pci"
				}
				
				"PrecacheParticleSystem"
				{
					type "sym"
					sym  "_Z22PrecacheParticleSystemPKc"
				}
				"CTeamplayRoundBasedRules::SetForceMapReset"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules16SetForceMapResetEb"
				}
				"CGameEventManager::CreateEvent"
				{
					type "sym"
					sym  "_ZN17CGameEventManager11CreateEventEPKcb"
				}
				"CGameEventManager::FireEventIntern"
				{
					type "sym"
					sym  "_ZN17CGameEventManager15FireEventInternEP10IGameEventbb"
				}
				"ReadEncryptedKVFile"
				{
					type "sym"
					sym  "_Z19ReadEncryptedKVFileP11IFileSystemPKcPKhb"
				}
			
				"CTFGameMovement::CheckJumpButton"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement15CheckJumpButtonEv"
				}
				
				"TE_TFExplosion"
				{
					type "sym"
					sym  "_Z14TE_TFExplosionR16IRecipientFilterfRK6VectorS3_iiiii"
				}
				"GetParticleSystemIndex"
				{
					type "sym"
					sym  "_Z22GetParticleSystemIndexPKc"
				}
				"UTIL_SetSize"
				{
					type "sym"
					sym  "_Z12UTIL_SetSizeP11CBaseEntityRK6VectorS3_"
				}
				
				"TE_DispatchEffect"
				{
					type "sym"
					sym  "_Z17TE_DispatchEffectR16IRecipientFilterfRK6VectorPKcRK11CEffectData"
				}
				"CTempEntsSystem::DispatchEffect"
				{
					type "sym"
					sym  "_ZN15CTempEntsSystem14DispatchEffectER16IRecipientFilterfRK6VectorPKcRK11CEffectData"
				}
				"CRecipientFilter::IgnorePredictionCull"
				{
					type "sym"
					sym  "_ZNK16CRecipientFilter20IgnorePredictionCullEv"
				}
				"CMatchInfo::GetNumActiveMatchPlayers"
				{
					type "sym"
					sym  "_ZNK10CMatchInfo24GetNumActiveMatchPlayersEv"
				}
				"CTFGCServerSystem::PreClientUpdate"
				{
					type "sym"
					sym  "_ZN17CTFGCServerSystem15PreClientUpdateEv"
				}
				"CTFGameRules::PlayerReadyStatus_ShouldStartCountdown"
				{
					type "sym"
					sym  "_ZN12CTFGameRules38PlayerReadyStatus_ShouldStartCountdownEv"
				}
				
				"DispatchEffect"
				{
					type "sym"
					sym  "_Z14DispatchEffectPKcRK11CEffectDataR16CRecipientFilter"
				}
				"UTIL_HudMessage"
				{
					type "sym"
					sym  "_Z15UTIL_HudMessageP11CBasePlayerRK14hudtextparms_sPKc"
				}

				"CTFBotVision::UpdatePotentiallyVisibleNPCVector"
				{
					type "sym"
					sym  "_ZN12CTFBotVision33UpdatePotentiallyVisibleNPCVectorEv"
				}
				
				"CTFGameRules::ShouldRespawnQuickly"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20ShouldRespawnQuicklyEP11CBasePlayer"
				}
				"TE_PlayerAnimEvent"
				{
					type "sym"
					sym  "_Z18TE_PlayerAnimEventP11CBasePlayer17PlayerAnimEvent_ti"
				}
				"CBaseTempEntity::Create"
				{
					type "sym"
					sym  "_ZN15CBaseTempEntity6CreateER16IRecipientFilterf"
				}
				"CBaseTempEntity::GetServerClass"
				{
					type "sym"
					sym  "_ZN15CBaseTempEntity14GetServerClassEv"
				}
				"CAttributeList::SetRuntimeAttributeValue"
				{
					type "sym"
					sym  "_ZN14CAttributeList24SetRuntimeAttributeValueEPK28CEconItemAttributeDefinitionf"
				}
				"TF_IsHolidayActive"
				{
					type "sym"
					sym  "_Z18TF_IsHolidayActivei"
				}
				
				"ApplyUpgrade_Default"
				{
					type "sym"
					sym  "_ZL20ApplyUpgrade_DefaultRK22CMannVsMachineUpgradesP9CTFPlayerP13CEconItemViewib"
				}
				
				
				"GetUpgradeStepData"
				{
					type "sym"
					sym  "_Z18GetUpgradeStepDataP9CTFPlayeriiRiRb"
				}
				"CVGUILocalizationProvider::ConvertLoccharToANSI"
				{
					type "sym"
					sym  "_ZNK25CVGUILocalizationProvider20ConvertLoccharToANSIEPKwPci"
				}
				
				"CItemGeneration::SpawnItem [defIndex]"
				{
					type "sym"
					sym  "_ZN15CItemGeneration9SpawnItemEiRK6VectorRK6QAngleiiPKc"
				}
				
				"PropDynamic_CollidesWithGrenades"
				{
					type "sym"
					sym  "_Z32PropDynamic_CollidesWithGrenadesP11CBaseEntity"
				}
				
				"CBaseClient::SendNetMsg"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseClient10SendNetMsgER11INetMessageb"
				}
				"CMannVsMachineStats::PlayerEvent_Upgraded"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats20PlayerEvent_UpgradedEP9CTFPlayertthsb"
				}
				"CMannVsMachineStats::NotifyTargetPlayerEvent"
				{
					type "sym"
					sym  "_ZN19CMannVsMachineStats23NotifyTargetPlayerEventEP9CTFPlayerj19eMannVsMachineEventi"
				}
				
				"static_attrib_t::BInitFromKV_SingleLine"
				{
					type "sym"
					sym  "_ZN15static_attrib_t22BInitFromKV_SingleLineEPKcP9KeyValuesP10CUtlVectorI10CUtlString10CUtlMemoryIS5_iEEb"
				}
				
				
				"CTraceFilterObject::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN18CTraceFilterObject15ShouldHitEntityEP13IHandleEntityi"
				}
				"ToTFBot"
				{
					type "sym"
					sym  "_Z7ToTFBotP11CBaseEntity"
				}
				"CGameClient::ShouldSendMessages"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CGameClient18ShouldSendMessagesEv"
				}
				"SV_ComputeClientPacks"
				{
					type "sym"
					lib  "engine"
					sym  "_Z21SV_ComputeClientPacksiPP11CGameClientP14CFrameSnapshot"
				}
				"CHLTVServer::RunFrame"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer8RunFrameEv"
				}
				"CGameServer::SetHibernating"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CGameServer14SetHibernatingEb"
				}
				"CHLTVServer::StartMaster"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer11StartMasterEP11CGameClient"
				}
				"CBaseServer::CreateFakeClient"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseServer16CreateFakeClientEPKc"
				}
				"CBaseClient::ShouldSendMessages"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseClient18ShouldSendMessagesEv"
				}
				"CClientFrameManager::DeleteClientFrames"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CClientFrameManager18DeleteClientFramesEi"
				}
				
				"CServerGameEnts::CheckTransmit"
				{
					type "sym"
					sym  "_ZN15CServerGameEnts13CheckTransmitEP18CCheckTransmitInfoPKti"
				}
				"SendTable_CalcDelta"
				{
					type "sym"
					lib  "engine"
					sym  "_Z19SendTable_CalcDeltaPK9SendTablePKviS3_iPiii"
				}
				
				"CAttributeManager::GetGlobalCacheVersion"
				{
					type "sym"
					sym  "_ZNK17CAttributeManager21GetGlobalCacheVersionEv"
				}
				"CAttributeManager::ClearCache"
				{
					type "sym"
					sym  "_ZN17CAttributeManager10ClearCacheEv"
				}
				"CAttributeManager::~CAttributeManager [D2]"
				{
					type "sym"
					sym  "_ZN17CAttributeManagerD2Ev"
				}
				"CAttributeManager::~CAttributeManager [D0]"
				{
					type "sym"
					sym  "_ZN17CAttributeManagerD0Ev"
				}
				"CAttributeManager::ApplyAttributeFloat"
				{
					type "sym"
					sym  "_ZN17CAttributeManager19ApplyAttributeFloatEfP11CBaseEntity8string_tP10CUtlVectorIS1_10CUtlMemoryIS1_iEE"
				}
				
				"SV_PackEntity"
				{
					type "sym"
					lib  "engine"
					sym  "_ZL13SV_PackEntityiP7edict_tP11ServerClassP14CFrameSnapshot"
				}
				"CEngine::Frame"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN7CEngine5FrameEv"
				}
				"_Host_RunFrame_Server"
				{
					type "sym"
					lib  "engine"
					sym  "_Z21_Host_RunFrame_Serverb"
				}
				"_Host_RunFrame"
				{
					type "sym"
					lib  "engine"
					sym  "_Z14_Host_RunFramef"
				}
				
				"FX_FireBullets"
				{
					type "sym"
					sym  "_Z14FX_FireBulletsP13CTFWeaponBaseiRK6VectorRK6QAngleiiiffb"
				}
				"FindAttribute_UnsafeBitwiseCast<uint, float, CAttributeList>"
				{
					type "sym"
					sym  "_Z31FindAttribute_UnsafeBitwiseCastIjf14CAttributeListEbPKT1_PK28CEconItemAttributeDefinitionPT0_"
				}
				"FindAttribute_UnsafeBitwiseCast<uint, float, CTFItemDefinition>"
				{
					type "sym"
					sym  "_Z31FindAttribute_UnsafeBitwiseCastIjf17CTFItemDefinitionEbPKT1_PK28CEconItemAttributeDefinitionPT0_"
				}
				
				"INextBotComponent::GetBot"
				{
					type "sym"
					sym  "_ZNK17INextBotComponent6GetBotEv"
				}
				"INextBotComponent::Upkeep"
				{
					type "sym"
					sym  "_ZN17INextBotComponent6UpkeepEv"
				}
				"CTFGameRules::GetKillingWeaponName"
				{
					type "sym"
					sym  "_ZN12CTFGameRules20GetKillingWeaponNameERK15CTakeDamageInfoP9CTFPlayerPi"
				}
				
				"CHLTVServer::IsTVRelay"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer9IsTVRelayEv"
				}
				"CServerGameDLL::SetServerHibernation"
				{
					type "sym"
					sym  "_ZN14CServerGameDLL20SetServerHibernationEb"
				}
				"CTFGCServerSystem::SetHibernation"
				{
					type "sym"
					sym  "_ZN17CTFGCServerSystem14SetHibernationEb"
				}
				
				"CAttributeManager::OnAttributeValuesChanged"
				{
					type "sym"
					sym  "_ZN17CAttributeManager24OnAttributeValuesChangedEv"
				}
				"CAttributeContainer::OnAttributeValuesChanged"
				{
					type "sym"
					sym  "_ZN19CAttributeContainer24OnAttributeValuesChangedEv"
				}
				"CAttributeContainerPlayer::OnAttributeValuesChanged"
				{
					type "sym"
					sym  "_ZN25CAttributeContainerPlayer24OnAttributeValuesChangedEv"
				}
				"TE_MetalSparks"
				{
					type "sym"
					sym  "_Z14TE_MetalSparksR16IRecipientFilterfPK6VectorS3_"
				}
				
				"CTFGameRules::CleanUpMap"
				{
					type "sym"
					sym  "_ZN12CTFGameRules10CleanUpMapEv"
				}
				
				"CBaseEntityOutput::FireOutput"
				{
					type "sym"
					sym  "_ZN17CBaseEntityOutput10FireOutputE9variant_tP11CBaseEntityS2_f"
				}
				"CRC_File"
				{
					type "sym"
					lib  "engine"
					sym  "_Z8CRC_FilePjPKc"
				}
				
				"UTIL_PlayerDecalTrace"
				{
					type "sym"
					sym  "_Z21UTIL_PlayerDecalTraceP10CGameTracei"
				}
				"TE_PlayerDecal"
				{
					type "sym"
					sym  "_Z14TE_PlayerDecalR16IRecipientFilterfPK6Vectorii"
				}
				"CBaseClient::FillUserInfo"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseClient12FillUserInfoER13player_info_s"
				}
				"CBaseServer::UserInfoChanged"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseServer15UserInfoChangedEi"
				}
				"GetClassIndexFromString"
				{
					type "sym"
					sym  "_Z23GetClassIndexFromStringPKci"
				}
				"CParallelProcessor<PackWork_t>::Run"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN18CParallelProcessorI10PackWork_t21CFuncJobItemProcessorIS0_EE3RunEPS0_jiP11IThreadPool"
				}
				"CFrameSnapshotManager::GetPreviouslySentPacket"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN21CFrameSnapshotManager23GetPreviouslySentPacketEii"
				}
				"CVEngineServer::GetChangeAccessor"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN14CVEngineServer17GetChangeAccessorEPK7edict_t"
				}
				"PackWork_t::Process"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN10PackWork_t7ProcessERS_"
				}
				"CFrameSnapshotManager::UsePreviouslySentPacket"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN21CFrameSnapshotManager23UsePreviouslySentPacketEP14CFrameSnapshotii"
				}
				"CFrameSnapshotManager::CreatePackedEntity"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN21CFrameSnapshotManager18CreatePackedEntityEP14CFrameSnapshoti"
				}
				"CBaseEdict::GetChangeAccessor"
				{
					type "sym"
					sym  "_ZN10CBaseEdict17GetChangeAccessorEv"
				}
				"CHLTVDemoRecorder::StartRecording"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN17CHLTVDemoRecorder14StartRecordingEPKcb"
				}
				"CHLTVDemoRecorder::StopRecording"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN17CHLTVDemoRecorder13StopRecordingEv"
				}
				"CClientFrameManager::CountClientFrames"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CClientFrameManager17CountClientFramesEv"
				}
				"CClientFrameManager::RemoveOldestFrame"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CClientFrameManager17RemoveOldestFrameEv"
				}
				"CHLTVServer::RestoreTick"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer11RestoreTickEi"
				}
				"SendTable_Encode"
				{
					type "sym"
					lib  "engine"
					sym  "_Z16SendTable_EncodePK9SendTablePKvP8bf_writeiP10CUtlMemoryI20CSendProxyRecipientsiEb"
				}
				"CDatatableStack::Init"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN15CDatatableStack4InitEb"
				}
				"CMultiPlayerAnimState::AddToGestureSlot"
				{
					type "sym"
					sym  "_ZN21CMultiPlayerAnimState16AddToGestureSlotEi8Activityb"
				}
				"CAnimationLayer::StudioFrameAdvance"
				{
					type "sym"
					sym  "_ZN15CAnimationLayer18StudioFrameAdvanceEfP14CBaseAnimating"
				}
				
				"AllocChangeFrameList"
				{
					type "sym"
					lib  "engine"
					sym  "_Z20AllocChangeFrameListii"
				}
				"CMultiPlayerAnimState::RestartGesture"
				{
					type "sym"
					sym  "_ZN21CMultiPlayerAnimState14RestartGestureEi8Activityb"
				}
				"PackEntities_Normal"
				{
					type "sym"
					lib  "engine"
					sym  "_Z19PackEntities_NormaliPP11CGameClientP14CFrameSnapshot"
				}
				"CAttributeManager::ClearCache [clone]"
				{
					type "sym regex"
					sym  "_ZN17CAttributeManager10ClearCacheEv\\.part\\..*"
				}
				"SV_EnsureInstanceBaseline"
				{
					type "sym"
					lib  "engine"
					sym  "_Z25SV_EnsureInstanceBaselineP11ServerClassiPKvi"
				}
				"PackedEntity::GetPropsChangedAfterTick"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN12PackedEntity24GetPropsChangedAfterTickEiPii"
				}
				"SendTable_WriteAllDeltaProps"
				{
					type "sym"
					lib  "engine"
					sym  "_Z28SendTable_WriteAllDeltaPropsPK9SendTablePKviS3_iiP8bf_write"
				}
				"SendTable_WritePropList"
				{
					type "sym"
					lib  "engine"
					sym  "_Z23SendTable_WritePropListPK9SendTablePKviP8bf_writeiPKii"
				}
				"CBaseServer::WriteDeltaEntities"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseServer18WriteDeltaEntitiesEP11CBaseClientP12CClientFrameS3_R8bf_write"
				}
				"CBaseServer::UncompressPackedEntity"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CBaseServer22UncompressPackedEntityEP12PackedEntityRi"
				}
				"SendTable_CullPropsFromProxies"
				{
					type "sym"
					lib  "engine"
					sym  "_Z30SendTable_CullPropsFromProxiesPK9SendTablePKiiiPK20CSendProxyRecipientsiS6_iPii"
				}
				"CCommandBuffer::AddText"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN14CCommandBuffer7AddTextEPKci"
				}
				"CHLTVServer::UpdateTick"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer10UpdateTickEv"
				}
				"CNetworkStringTableContainer::EnableRollback"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN28CNetworkStringTableContainer14EnableRollbackEb"
				}
				"CNetworkStringTable::RestoreTick"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CNetworkStringTable11RestoreTickEi"
				}
				"CNetworkStringTable::UpdateMirrorTable"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN19CNetworkStringTable17UpdateMirrorTableEi"
				}
				
				"SendProxy_SendHealersDataTable"
				{
					type "sym"
					sym  "_Z30SendProxy_SendHealersDataTablePK8SendPropPKvS3_P20CSendProxyRecipientsi"
				}
				"SendProxy_SendPredictableId"
				{
					type "sym"
					sym  "_ZL27SendProxy_SendPredictableIdPK8SendPropPKvS3_P20CSendProxyRecipientsi_0"
				}
				
				"CTFBotSquad::Leave"
				{
					type "sym"
					sym  "_ZN11CTFBotSquad5LeaveEP6CTFBot"
				}
				"CTFBotSquad::ShouldSquadLeaderWaitForFormation"
				{
					type "sym"
					sym  "_ZNK11CTFBotSquad33ShouldSquadLeaderWaitForFormationEv"
				}
				"JarExplode"
				{
					type "sym"
					sym  "_Z10JarExplodeiP9CTFPlayerP11CBaseEntityS2_RK6Vectorif7ETFCondfPKcS8_"
				}
				"CTFInventoryManager::GetBaseItemForClass"
				{
					type "sym"
					sym  "_ZN19CTFInventoryManager19GetBaseItemForClassEii"
				}
				"CPlayerInventory::GetItemByPosition"
				{
					type "sym"
					sym  "_ZN16CPlayerInventory17GetItemByPositionEiPi"
				}
				"CheckChatText"
				{
					type "sym"
					sym  "_Z13CheckChatTextP11CBasePlayerPc"
				}
				"Host_Say"
				{
					type "sym"
					sym  "_Z8Host_SayP7edict_tRK8CCommandb"
				}
				
				"CEyeballBossApproachTarget::Update"
				{
					type "sym"
					sym  "_ZN26CEyeballBossApproachTarget6UpdateEP12CEyeballBossf"
				}
				"CEyeballBossLaunchRockets::Update"
				{
					type "sym"
					sym  "_ZN25CEyeballBossLaunchRockets6UpdateEP12CEyeballBossf"
				}
				"CHLTVClient::ExecuteStringCommand"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVClient20ExecuteStringCommandEPKc"
				}
				"CHLTVClient::SpawnPlayer"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVClient11SpawnPlayerEv"
				}
				"CHLTVServer::ConnectClient"
				{
					type "sym"
					lib  "engine"
					sym  "_ZN11CHLTVServer13ConnectClientER8netadr_siiiiPKcS3_S3_i"
				}
				"CTFGameRules::BetweenRounds_Think"
				{
					type "sym"
					sym  "_ZN12CTFGameRules19BetweenRounds_ThinkEv"
				}
				"CSchemaAttributeType_Default::ConvertStringToEconAttributeValue"
				{
					type "sym"
					sym  "_ZNK28CSchemaAttributeType_Default34BConvertStringToEconAttributeValueEPK28CEconItemAttributeDefinitionPKcP22attribute_data_union_tb"
				}
				
				
				
				"SpawnHierarchicalList"
				{
					type "sym"
					sym  "_Z21SpawnHierarchicalListiP19HierarchicalSpawn_tb"
				}
				
				
				"CCollisionProperty::SetSolidFlags"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty13SetSolidFlagsEi"
				}
				
				"CGlobalEntityList::FindEntityByName"
				{
					type "sym"
					sym  "_ZN17CGlobalEntityList16FindEntityByNameEP11CBaseEntityPKcS1_S1_S1_P17IEntityFindFilter"
				}
				"CHeadlessHatmanAttack::RecomputeHomePosition"
				{
					type "sym"
					sym  "_ZN21CHeadlessHatmanAttack21RecomputeHomePositionEv"
				}
				"TE_TFBlood"
				{
					type "sym"
					sym  "_Z10TE_TFBloodR16IRecipientFilterfRK6VectorS3_i"
				}
				
				"CEngineSoundServer::PrecacheSound"
				{
					lib "engine"
					type "sym"
					sym  "_ZN18CEngineSoundServer13PrecacheSoundEPKcbb"
				}
				"UTIL_ParticleTracer"
				{
					type "sym"
					sym  "_Z19UTIL_ParticleTracerPKcRK6VectorS3_iib"
				}
				"CalculateMeleeDamageForce"
				{
					type "sym"
					sym  "_Z25CalculateMeleeDamageForceP15CTakeDamageInfoRK6VectorS3_f"
				}
				"CHeadlessHatmanAttack::AttackTarget"
				{
					type "sym"
					sym  "_ZN21CHeadlessHatmanAttack12AttackTargetEP15CHeadlessHatmanP20CBaseCombatCharacterf"
				}
				
				"ParseKeyvalue"
				{
					type "sym"
					sym  "_Z13ParseKeyvaluePvP17typedescription_tiPKcS3_"
				}
				"CBaseEntityOutput::ParseEventAction"
				{
					type "sym"
					sym  "_ZN17CBaseEntityOutput16ParseEventActionEPKc"
				}
				"variant_t::Set"
				{
					type "sym"
					sym  "_ZN9variant_t3SetE11_fieldtypesPv"
				}
				"variant_t::SetOther"
				{
					type "sym"
					sym  "_ZN9variant_t8SetOtherEPv"
				}
				"variant_t::Convert"
				{
					type "sym"
					sym  "_ZN9variant_t7ConvertE11_fieldtypes"
				}
				"CreateSpellSpawnZombie"
				{
					type "sym"
					sym  "_Z22CreateSpellSpawnZombieP20CBaseCombatCharacterRK6Vectori"
				}
				"ENTINDEX"
				{
					type "sym"
					sym  "_Z8ENTINDEXP11CBaseEntity"
				}
				"CTraceFilterSimple::CTraceFilterSimple"
				{
					type "sym"
					sym  "_ZN18CTraceFilterSimpleC2EPK13IHandleEntityiPFbPS0_iE"
				}
				"CTFGameMovement::PlayerSolidMask"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement15PlayerSolidMaskEb"
				}
				
				"CMannVsMachineChangeChallengeIssue::ExecuteCommand"
				{
					type "sym"
					sym  "_ZN34CMannVsMachineChangeChallengeIssue14ExecuteCommandEv"
				}
				"CTFGameRules::LoadMapCycleFile"
				{
					type "sym"
					sym  "_ZN12CTFGameRules16LoadMapCycleFileEv"
				}

				"CTFPlayerInventory::GetItemInLoadout"
				{
					type "sym"
					sym  "_ZN18CTFPlayerInventory16GetItemInLoadoutEii"
				}
				"UTIL_PlayerBySteamID"
				{
					type "sym"
					sym  "_Z20UTIL_PlayerBySteamIDRK8CSteamID"
				}
				 
				"CCollisionProperty::SetCollisionBounds"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty18SetCollisionBoundsERK6VectorS2_"
				}  
				"UTIL_StringToVector"
				{
					type "sym"
					sym  "_Z19UTIL_StringToVectorPfPKc"
				}
				"CCollisionProperty::SetSolid"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty8SetSolidE11SolidType_t"
				}
				
				"CGameStringPool::LevelShutdownPostEntity"
				{
					type "sym"
					sym  "_ZN15CGameStringPool23LevelShutdownPostEntityEv"
				}
				"CPlayerMove::SetupMove"
				{
					type "sym"
					sym  "_ZN11CPlayerMove9SetupMoveEP11CBasePlayerP8CUserCmdP11IMoveHelperP9CMoveData"
				}
				"GetPlayerClassData"
				{
					type "sym"
					sym  "_Z18GetPlayerClassDataj"
				}
				"CalculatePhysicsImpactDamage"
				{
					type "sym"
					sym  "_Z28CalculatePhysicsImpactDamageiP21gamevcollisionevent_tRK19impactdamagetable_tfbRib"
				}
				"CBaseEntityOutput::DeleteAllElements"
				{
					type "sym"
					sym  "_ZN17CBaseEntityOutput17DeleteAllElementsEv"
				}
				"InstancedScriptedScene"
				{
					type "sym"
					sym  "_Z22InstancedScriptedSceneP9CBaseFlexPKcP7CHandleI11CBaseEntityEfbP11AI_ResponsebP16IRecipientFilter"
				}
				"StopScriptedScene"
				{
					type "sym"
					sym  "_Z17StopScriptedSceneP9CBaseFlex7CHandleI11CBaseEntityE"
				}
				
				"CPhysicsHook::FindOrAddVehicleScript"
				{
					type "sym"
					sym  "_ZN12CPhysicsHook22FindOrAddVehicleScriptEPKcP15vehicleparams_tP15vehiclesounds_t"
				}
				
				"CAttributeList::NotifyManagerOfAttributeValueChanges"
				{
					type "sym"
					sym  "_ZN14CAttributeList36NotifyManagerOfAttributeValueChangesEv"
				}
				"CAttributeList::SetRuntimeAttributeRefundableCurrency"
				{
					type "sym"
					sym  "_ZN14CAttributeList37SetRuntimeAttributeRefundableCurrencyEPK28CEconItemAttributeDefinitioni"
				}
				"CEventQueue::CancelEvents"
				{
					type "sym"
					sym  "_ZN11CEventQueue12CancelEventsEP11CBaseEntity"
				}
				"V_snprintf"
				{
					type "sym"
					sym  "_Z10V_snprintfPciPKcz"
				}
				"ClassCanBuild"
				{
					type "sym"
					sym  "_Z13ClassCanBuildii"
				}
				"GetParticleSystemNameFromIndex"
				{
					type "sym"
					sym  "_Z30GetParticleSystemNameFromIndexi"
				}
				"CEventQueue::AddEvent [CBaseEntity]"
				{
					type "sym"
					sym  "_ZN11CEventQueue8AddEventEP11CBaseEntityPKc9variant_tfS1_S1_i"
				}
				
				"CM_EntityString"
				{
					type "sym"
					lib "engine"
					sym  "_Z15CM_EntityStringv"
				}
				"CServerGameDLL::LevelInit"
				{
					type "sym"
					sym  "_ZN14CServerGameDLL9LevelInitEPKcS1_S1_S1_bb"
				}
				"CSpawnLocation::FindSpawnLocation"
				{
					type "sym"
					sym  "_ZN14CSpawnLocation17FindSpawnLocationER6Vector"
				}
				"CSoundEmitterSystemBase::AddSoundsFromFile"
				{
					type "sym"
					lib "soundemittersystem"
					sym  "_ZN23CSoundEmitterSystemBase17AddSoundsFromFileEPKcbbb"
				}
				"CSoundEmitterSystemBase::InitSoundInternalParameters"
				{
					type "sym"
					lib "soundemittersystem"
					sym  "_ZN23CSoundEmitterSystemBase27InitSoundInternalParametersEPKcP9KeyValuesR24CSoundParametersInternal"
				}
				
				
				"CEventAction::CEventAction [C2]"
				{
					type "sym"
					sym  "_ZN12CEventActionC2EPKc"
				}
				
				"CQuestItemTracker::FireGameEvent"
				{
					type "sym"
					sym  "_ZN17CQuestItemTracker13FireGameEventEP10IGameEvent"
				}
				"CBaseServer::GetCPUUsage"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer11GetCPUUsageEv"
				}
				"CGlobalEntityList::NumberOfEntities"
				{
					type "sym"
					sym  "_ZN17CGlobalEntityList16NumberOfEntitiesEv"
				}
				"CTFGameMovement::ToggleParachute"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement15ToggleParachuteEv"
				}
				"CTFGameMovement::HandleDuckingSpeedCrop"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement22HandleDuckingSpeedCropEv"
				}
				
				"CAttributeManager::ProvideTo"
				{
					type "sym"
					sym  "_ZN17CAttributeManager9ProvideToEP11CBaseEntity"
				}
				"CAttributeManager::StopProvidingTo"
				{
					type "sym"
					sym  "_ZN17CAttributeManager15StopProvidingToEP11CBaseEntity"
				}
				
				"CServerGameClients::GetPlayerLimits"
				{
					type "sym"
					sym  "_ZNK18CServerGameClients15GetPlayerLimitsERiS0_S0_"
				}
				"CBaseServer::GetFreeClient"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer13GetFreeClientER8netadr_s"
				}
				"CBaseServer::CreateNewClient"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer15CreateNewClientEi"
				}
				"SV_ActivateServer"
				{
					type "sym"
					lib "engine"
					sym  "_Z17SV_ActivateServerv"
				}
				
				"SetupMaxPlayers"
				{
					type "sym"
					lib "engine"
					sym  "_Z15SetupMaxPlayersi"
				}
				"Host_Changelevel"
				{
					type "sym"
					lib "engine"
					sym  "_Z16Host_ChangelevelbPKcS0_"
				}
				"CGameServer::SpawnServer"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CGameServer11SpawnServerEPKcS1_S1_"
				}
				"Host_NewGame"
				{
					type "sym"
					lib "engine"
					sym  "_Z12Host_NewGamePcbbPKcS1_b"
				}
				"CLagCompensationManager::FrameUpdatePostEntityThink"
				{
					type "sym"
					sym  "_ZN23CLagCompensationManager26FrameUpdatePostEntityThinkEv"
				}
				"SendProxy_PlayerList"
				{
					type "sym"
					sym  "_Z20SendProxy_PlayerListPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxyArrayLength_PlayerArray"
				{
					type "sym"
					sym  "_Z32SendProxyArrayLength_PlayerArrayPKvi"
				}
				"CCvar::FindVar"
				{
					type "sym"
					lib "vstdlib"
					sym  "_ZNK5CCvar7FindVarEPKc"
				}
				"CGameMovement::GetPointContentsCached"
				{
					type "sym"
					sym  "_ZN13CGameMovement22GetPointContentsCachedERK6Vectori"
				}
				"CTFGameRules::GetTaggedConVarList"
				{
					type "sym"
					sym  "_ZN12CTFGameRules19GetTaggedConVarListEP9KeyValues"
				}
				"CBaseServer::RecalculateTags"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer15RecalculateTagsEv"
				}
				"CGameMovement::CheckStuck"
				{
					type "sym"
					sym  "_ZN13CGameMovement10CheckStuckEv"
				}
				"CTFGameStats::ResetPlayerStats"
				{
					type "sym"
					sym  "_ZN12CTFGameStats16ResetPlayerStatsEP9CTFPlayer"
				}
				"CTFGameStats::ResetKillHistory"
				{
					type "sym"
					sym  "_ZN12CTFGameStats16ResetKillHistoryEP9CTFPlayer"
				}
				"CTFGameStats::IncrementStat"
				{
					type "sym"
					sym  "_ZN12CTFGameStats13IncrementStatEP9CTFPlayer12TFStatType_ti"
				}
				"CTFGameStats::SendStatsToPlayer"
				{
					type "sym"
					sym  "_ZN12CTFGameStats17SendStatsToPlayerEP9CTFPlayerb"
				}
				"CTFGameStats::AccumulateAndResetPerLifeStats"
				{
					type "sym"
					sym  "_ZN12CTFGameStats30AccumulateAndResetPerLifeStatsEP9CTFPlayer"
				}
				"CTFGameStats::Event_PlayerConnected"
				{
					type "sym"
					sym  "_ZN12CTFGameStats21Event_PlayerConnectedEP11CBasePlayer"
				}
				"CTFGameStats::Event_PlayerDisconnectedTF"
				{
					type "sym"
					sym  "_ZN12CTFGameStats26Event_PlayerDisconnectedTFEP9CTFPlayer"
				}
				"CTFGameStats::Event_PlayerLeachedHealth"
				{
					type "sym"
					sym  "_ZN12CTFGameStats25Event_PlayerLeachedHealthEP9CTFPlayerbf"
				}
				"CTFGameStats::TrackKillStats"
				{
					type "sym"
					sym  "_ZN12CTFGameStats14TrackKillStatsEP11CBasePlayerS1_"
				}
				"CTFGameStats::FindPlayerStats"
				{
					type "sym"
					sym  "_ZN12CTFGameStats15FindPlayerStatsEP11CBasePlayer"
				}
				"CTFGameStats::Event_PlayerEarnedKillStreak"
				{
					type "sym"
					sym  "_ZN12CTFGameStats28Event_PlayerEarnedKillStreakEP9CTFPlayer"
				}
				
				
				"CServerGameClients::ClientActive"
				{
					type "sym"
					sym  "_ZN18CServerGameClients12ClientActiveEP7edict_tb"
				}
				"ClientActive"
				{
					type "sym"
					sym  "_Z12ClientActiveP7edict_tb"
				}
				
				
				"CVoiceGameMgr::ClientConnected"
				{
					type "sym"
					sym  "_ZN13CVoiceGameMgr15ClientConnectedEP7edict_t"
				}
				
				"CHLTVDirector::BuildActivePlayerList"
				{
					type "sym"
					sym  "_ZN13CHLTVDirector21BuildActivePlayerListEv"
				}
				"CTFGCServerSystem::ClientDisconnected"
				{
					type "sym"
					sym  "_ZN17CTFGCServerSystem18ClientDisconnectedE8CSteamID"
				}
				"ConVar::GetName"
				{
					type "sym"
					sym  "_ZNK6ConVar7GetNameEv"
				}
				"CVoiceGameMgrHelper::CanPlayerHearPlayer"
				{
					type "sym"
					sym  "_ZN19CVoiceGameMgrHelper19CanPlayerHearPlayerEP11CBasePlayerS1_Rb"
				}
				"CVoiceGameMgrHelper::ClientCommand"
				{
					type "sym"
					sym  "_ZN13CVoiceGameMgr13ClientCommandEP11CBasePlayerRK8CCommand"
				}
				"CTeamplayRoundBasedRules::State_Enter_PREROUND"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules20State_Enter_PREROUNDEv"
				}
				"CBaseClient::FireGameEvent"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseClient13FireGameEventEP10IGameEvent"
				}
				"ConCommandBase::GetName"
				{
					type "sym"
					sym  "_ZNK14ConCommandBase7GetNameEv"
				}
				"CTFGameRules::PowerupModeKillCountCompare"
				{
					type "sym"
					sym  "_ZN12CTFGameRules27PowerupModeKillCountCompareEv"
				}
				"CTFGameRules::PowerupModeInitKillCountTimer"
				{
					type "sym"
					sym  "_ZN12CTFGameRules29PowerupModeInitKillCountTimerEv"
				}
				"CTFGameMovement::CheckWater"
				{
					type "sym"
					sym  "_ZN15CTFGameMovement10CheckWaterEv"
				}
				"SV_BroadcastVoiceData"
				{
					type "sym"
					lib "engine"
					sym  "_Z21SV_BroadcastVoiceDataP7IClientiPcx"
				}
				"CSteam3Server::SendUpdatedServerDetails"
				{
					type "sym"
					lib "engine"
					sym  "_ZN13CSteam3Server24SendUpdatedServerDetailsEv"
				}
				"CVoiceGameMgr::UpdateMasks"
				{
					type "sym"
					sym  "_ZN13CVoiceGameMgr11UpdateMasksEv"
				}
				
				"CTFGameRules::RoundCleanupShouldIgnore"
				{
					type "sym"
					sym  "_ZN12CTFGameRules24RoundCleanupShouldIgnoreEP11CBaseEntity"
				}
				"CTFGameRules::ShouldCreateEntity"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18ShouldCreateEntityEPKc"
				}
				"CServerGameClients::ClientPutInServer"
				{
					type "sym"
					sym  "_ZN18CServerGameClients17ClientPutInServerEP7edict_tPKc"
				}
				"DispatchSpawn"
				{
					type "sym"
					sym  "_Z13DispatchSpawnP11CBaseEntityb"
				}
				"SendProxy_StringT_To_String"
				{
					type "sym"
					sym  "_Z27SendProxy_StringT_To_StringPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_StringToString"
				{
					type "sym"
					sym  "_Z24SendProxy_StringToStringPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_VectorXYToVectorXY"
				{
					type "sym"
					sym  "_Z28SendProxy_VectorXYToVectorXYPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_QAngles"
				{
					type "sym"
					sym  "_Z17SendProxy_QAnglesPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_Color32ToInt"
				{
					type "sym"
					sym  "_Z22SendProxy_Color32ToIntPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_EHandleToInt"
				{
					type "sym"
					sym  "_Z22SendProxy_EHandleToIntPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_IntAddOne"
				{
					type "sym"
					sym  "_Z19SendProxy_IntAddOnePK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_ShortAddOne"
				{
					type "sym"
					sym  "_Z21SendProxy_ShortAddOnePK8SendPropPKvS3_P8DVariantii"
				}
				"CTraceFilterEntity::ShouldHitEntity"
				{
					type "sym"
					sym  "_ZN18CTraceFilterEntity15ShouldHitEntityEP13IHandleEntityi"
				}
				"CCollisionEvent::ShouldCollide"
				{
					type "sym"
					sym  "_ZN15CCollisionEvent13ShouldCollideEP14IPhysicsObjectS1_PvS2_"
				}
				"CTFTankBossBody::GetSolidMask"
				{
					type "sym"
					sym  "_ZNK15CTFTankBossBody12GetSolidMaskEv"
				}
				"CNetChan::SendDatagram"
				{
					type "sym"
					lib "engine"
					sym  "_ZN8CNetChan12SendDatagramEP8bf_write"
				}
				"CTFGameRules::SendWinPanelInfo"
				{
					type "sym"
					sym  "_ZN12CTFGameRules16SendWinPanelInfoEb"
				}
				"CTFGameRules::BroadcastSound"
				{
					type "sym"
					sym  "_ZN12CTFGameRules14BroadcastSoundEiPKciP11CBasePlayer"
				}
				"UTIL_ScreenShake"
				{
					type "sym"
					sym  "_Z16UTIL_ScreenShakeRK6Vectorffff14ShakeCommand_tb"
				}
				"GetKilleaterWeaponFromDamageInfo"
				{
					type "sym"
					sym  "_Z32GetKilleaterWeaponFromDamageInfoPK15CTakeDamageInfo"
				}
				"CTeamplayRules::PlayerKilled"
				{
					type "sym"
					sym  "_ZN14CTeamplayRules12PlayerKilledEP11CBasePlayerRK15CTakeDamageInfo"
				}
				"CMultiplayRules::HaveAllPlayersSpeakConceptIfAllowed"
				{
					type "sym"
					sym  "_ZN15CMultiplayRules35HaveAllPlayersSpeakConceptIfAllowedEiiPKc"
				}
				
				"CBaseServer::GetClassBaseline"
				{
					type "sym"
					lib "engine"
					sym  "_ZN11CBaseServer16GetClassBaselineEP11ServerClassPPKvPi"
				}
				"CNetworkStringTableContainer::DirectUpdate"
				{
					type "sym"
					lib "engine"
					sym  "_ZN28CNetworkStringTableContainer12DirectUpdateEi"
				}
				"CServerNetworkProperty::AttachEdict"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty11AttachEdictEP7edict_t"
				}
				"GetKilleaterWeaponFromDamageInfo::CTakeDamageInfo"
				{
					type "sym"
					sym  "_Z32GetKilleaterWeaponFromDamageInfoPK15CTakeDamageInfo"
				}
				"EconItemInterface_OnOwnerKillEaterEvent_Batched"
				{
					type "sym"
					sym  "_Z47EconItemInterface_OnOwnerKillEaterEvent_BatchedP18IEconItemInterfaceP9CTFPlayerS2_18kill_eater_event_ti"
				}
				"OnBotTeleported"
				{
					type "sym"
					sym  "_Z15OnBotTeleportedP6CTFBot"
				}
				"EconItemInterface_OnOwnerKillEaterEvent"
				{
					type "sym"
					sym  "_Z39EconItemInterface_OnOwnerKillEaterEventP18IEconItemInterfaceP9CTFPlayerS2_18kill_eater_event_ti"
				}
				"CTFGameRules::FlPlayerFallDamage"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18FlPlayerFallDamageEP11CBasePlayer"
				}
				"CGameMovement::CheckFalling"
				{
					type "sym"
					sym  "_ZN13CGameMovement12CheckFallingEv"
				}
				"CTFGameRules::CanPlayerUseRespec"
				{
					type "sym"
					sym  "_ZN12CTFGameRules18CanPlayerUseRespecEP9CTFPlayer"
				}
				"CTFGameRules::IsCompetitiveMode"
				{
					type "sym"
					sym  "_ZNK12CTFGameRules17IsCompetitiveModeEv"
				}
				"CVEngineServer::PlaybackTempEntity"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CVEngineServer18PlaybackTempEntityER16IRecipientFilterfPKvPK9SendTablei"
				}
				"CNetworkStringTableContainer::CreateStringTable"
				{
					lib "engine"
					type "sym"
					sym  "_ZN28CNetworkStringTableContainer17CreateStringTableEPKciii"
				}
				"CNetworkStringTable::DeleteAllStrings"
				{
					lib "engine"
					type "sym"
					sym  "_ZN19CNetworkStringTable16DeleteAllStringsEv"
				}
				"CNetworkStringTable::AddString"
				{
					lib "engine"
					type "sym"
					sym  "_ZN19CNetworkStringTable9AddStringEbPKciPKv"
				}
				"CParticleSystemMgr::UncacheAllParticleSystems"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgr25UncacheAllParticleSystemsEv"
				}
				"ParseParticleEffects"
				{
					type "sym"
					sym  "_Z20ParseParticleEffectsbb"
				}
				"CParticleSystemMgr::GetParticleSystemCount"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgr22GetParticleSystemCountEv"
				}
				"CParticleSystemMgr::CParticleSystemMgr"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgrC2Ev"
				}
				"CParticleSystemMgr::~CParticleSystemMgr"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgrD2Ev"
				}
				"CParticleSystemMgr::Init"
				{
					type "sym"
					sym  "_ZN18CParticleSystemMgr4InitEP20IParticleSystemQuery"
				}
				"CServerNetworkProperty::GetEdict"
				{
					type "sym"
					sym  "_ZNK22CServerNetworkProperty8GetEdictEv"
				}
				"CServerNetworkProperty::GetEntityHandle"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty15GetEntityHandleEv"
				}
				"CServerNetworkProperty::GetServerClass"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty14GetServerClassEv"
				}
				"CServerNetworkProperty::GetBaseEntity"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty13GetBaseEntityEv"
				}
				"CServerNetworkProperty::GetBaseNetworkable"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty18GetBaseNetworkableEv"
				}
				"CServerNetworkProperty::GetClassName"
				{
					type "sym"
					sym  "_ZNK22CServerNetworkProperty12GetClassNameEv"
				}
				"CServerNetworkProperty::GetPVSInfo"
				{
					type "sym"
					sym  "_ZN22CServerNetworkProperty10GetPVSInfoEv"
				}
				"CServerNetworkProperty::AreaNum"
				{
					type "sym"
					sym  "_ZNK22CServerNetworkProperty7AreaNumEv"
				}
				
				"CCollisionProperty::GetEntityHandle"
				{
					type "sym"
					sym  "_ZN18CCollisionProperty15GetEntityHandleEv"
				}
				"CCollisionProperty::GetSolid"
				{
					type "sym"
					sym  "_ZNK18CCollisionProperty8GetSolidEv"
				}
				"CCollisionProperty::GetSolidFlags"
				{
					type "sym"
					sym  "_ZNK18CCollisionProperty13GetSolidFlagsEv"
				}
				"CTFConditionList::_Add"
				{
					type "sym"
					sym  "_ZN16CTFConditionList4_AddE7ETFCondfP9CTFPlayerP11CBaseEntity"
				}
				"CTFConditionList::_Remove"
				{
					type "sym"
					sym  "_ZN16CTFConditionList7_RemoveE7ETFCondb"
				}
				"GEconItemSchema"
				{
					type "sym"
					sym  "_Z15GEconItemSchemav"
				}
				"GetFileWeaponInfoFromHandle"
				{
					type "sym"
					sym  "_Z27GetFileWeaponInfoFromHandlet"
				}
				"CStaticPropMgr::IsStaticProp"
				{
					lib "engine"
					type "sym"
					sym  "_ZNK14CStaticPropMgr12IsStaticPropEP13IHandleEntity"
				}
				"INextBot::GetDebugIdentifier"
				{
					type "sym"
					sym  "_ZNK8INextBot18GetDebugIdentifierEv"
				}
				"CStaticProp::GetEntityHandle"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CStaticProp15GetEntityHandleEv"
				}
				"CStaticProp::GetRefEHandle"
				{
					lib "engine"
					type "sym"
					sym  "_ZNK11CStaticProp13GetRefEHandleEv"
				}
				"CStaticPropMgr::GetStaticProp"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CStaticPropMgr13GetStaticPropEP13IHandleEntity"
				}
				"CStaticProp::Init"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CStaticProp4InitEiR16StaticPropLump_tP7model_t"
				}
				"CSpatialPartition::CreateHandle"
				{
					lib "engine"
					type "sym"
					sym  "_ZN17CSpatialPartition12CreateHandleEP13IHandleEntity"
				}
				"CStaticPropMgr::GetStaticPropIndex"
				{
					lib "engine"
					type "sym"
					sym  "_ZNK14CStaticPropMgr18GetStaticPropIndexEP13IHandleEntity"
				}
				"CStaticPropMgr::LevelShutdown"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CStaticPropMgr13LevelShutdownEv"
				}
				"CStaticPropMgr::LevelInit"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CStaticPropMgr9LevelInitEv"
				}
				"UTIL_PlayerByIndex"
				{
					type "sym"
					sym  "_Z18UTIL_PlayerByIndexi"
				}
				"CModelInfoServer::RegisterDynamicModel"
				{
					lib "engine"
					type "sym"
					sym  "_ZN16CModelInfoServer20RegisterDynamicModelEPKcb"
				}
				"CMDLCache::BeginLock"
				{
					lib "datacache"
					type "sym"
					sym  "_ZN9CMDLCache9BeginLockEv"
				}
				"CMDLCache::EndLock"
				{
					lib "datacache"
					type "sym"
					sym  "_ZN9CMDLCache7EndLockEv"
				}
				"CModelLoader::FlushDynamicModels"
				{
					lib "engine"
					type "sym"
					sym  "_ZN12CModelLoader18FlushDynamicModelsEv"
				}
				"CThreadLocalBase::Get"
				{
					lib "tier0"
					type "sym"
					sym  "_ZNK16CThreadLocalBase3GetEv"
				}
				"CTakeDamageInfo::Init"
				{
					type "sym"
					sym  "_ZN15CTakeDamageInfo4InitEP11CBaseEntityS1_S1_RK6VectorS4_S4_fii"
				}
				"CAttributeManager::AddProvider"
				{
					type "sym"
					sym  "_ZN17CAttributeManager11AddProviderEP11CBaseEntity"
				}
				"CAttributeManager::RemoveProvider"
				{
					type "sym"
					sym  "_ZN17CAttributeManager14RemoveProviderEP11CBaseEntity"
				}
				"CAttributeManager::ApplyAttributeStringWrapper"
				{
					type "sym"
					sym  "_ZN17CAttributeManager27ApplyAttributeStringWrapperE8string_tP11CBaseEntityS0_P10CUtlVectorIS2_10CUtlMemoryIS2_iEE"
				}
				"CAttributeManager::ApplyAttributeString"
				{
					type "sym"
					sym  "_ZN17CAttributeManager20ApplyAttributeStringE8string_tP11CBaseEntityS0_P10CUtlVectorIS2_10CUtlMemoryIS2_iEE"
				}
				"CServerDatatableStack::RecurseAndCallProxies"
				{
					lib "engine"
					type "sym"
					sym  "_ZN21CServerDatatableStack21RecurseAndCallProxiesEP9CSendNodePh"
				}
				"CTFGameRules::SetupOnRoundStart"
				{
					type "sym"
					sym  "_ZN12CTFGameRules17SetupOnRoundStartEv"
				}
				"CSingleUserRecipientFilter::CSingleUserRecipientFilter"
				{
					type "sym"
					sym  "_ZN26CSingleUserRecipientFilterC2EPK11CBasePlayer"
				}
				"SendProxy_AngleToFloat"
				{
					lib "engine"
					type "sym"
					sym  "_Z22SendProxy_AngleToFloatPK8SendPropPKvS3_P8DVariantii"
				}
				"SendProxy_Empty"
				{
					lib "engine"
					type "sym"
					sym  "_ZL15SendProxy_EmptyPK8SendPropPKvS3_P8DVariantii"
				}
				"Script_StringToFile"
				{
					type "sym"
					sym  "_ZL19Script_StringToFilePKcS0_"
				}
				"CHLTVClient::SendSnapshot"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CHLTVClient12SendSnapshotEP12CClientFrame"
				}
				"CHLTVServer::BroadcastLocalChat"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CHLTVServer18BroadcastLocalChatEPKcS1_"
				}
				"CBaseClient::Disconnect"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseClient10DisconnectEPKcz"
				}
				"CBaseClient::ActivatePlayer"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseClient14ActivatePlayerEv"
				}
				"CBaseClient::OnSignonStateFull"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseClient17OnSignonStateFullEv"
				}
				"CTFGameRules::DeathNotice"
				{
					type "sym"
					sym  "_ZN12CTFGameRules11DeathNoticeEP11CBasePlayerRK15CTakeDamageInfoPKc"
				}
				"CTriggerMoved::EnumElement"
				{
					lib "engine"
					type "sym"
					sym  "_ZN13CTriggerMoved11EnumElementEP13IHandleEntity"
				}
				"CStaticPropMgr::IsStaticProp (CBaseHandle)"
				{
					lib "engine"
					type "sym"
					sym  "_ZNK14CStaticPropMgr12IsStaticPropE11CBaseHandle"
				}
				"CPlayer::IsSourceTV"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZNK7CPlayer10IsSourceTVEv"
				}
				"CPlayer::GetIClient"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZNK7CPlayer10GetIClientEv"
				}
				"PlayerManager::OnClientPutInServer"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZN13PlayerManager19OnClientPutInServerEP7edict_tPKc"
				}
				"CPlayer::GetEdict"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZN7CPlayer8GetEdictEv"
				}
				"PlayerManager::GetPlayerByIndex"
				{
					lib "sourcemodcore"
					type "sym"
					sym  "_ZNK13PlayerManager16GetPlayerByIndexEi"
				}
				"LookupWeaponInfoSlot"
				{
					type "sym"
					sym  "_Z20LookupWeaponInfoSlotPKc"
				}

				"UTIL_PlayerBulletTrace"
				{
					type "sym"
					sym  "_ZL22UTIL_PlayerBulletTraceRK6VectorS1_S1_jP12ITraceFilterP10CGameTrace_constprop_737"
				}
				"CSchemaAttributeType_String::BConvertStringToEconAttributeValue"
				{
					type "sym"
					sym  "_ZNK27CSchemaAttributeType_String34BConvertStringToEconAttributeValueEPK28CEconItemAttributeDefinitionPKcP22attribute_data_union_tb"
				}
				"CNetChan::IsFileInWaitingList"
				{
					lib "engine"
					type "sym"
					sym  "_ZN8CNetChan19IsFileInWaitingListEPKc"
				}
				"CStdMemAlloc::Alloc"
				{
					type   "func knownvtidx"
					sym    "_ZN12CStdMemAlloc5AllocEj"
					sym64  "_ZN12CStdMemAlloc5AllocEm"
					vtable ".?AVCStdMemAlloc@@"
					idx    "0x01"
					lib    "tier0"
				}

				"CServerPlugin::OnQueryCvarValueFinished"
				{
					lib "engine"
					type "sym"
					sym  "_ZN13CServerPlugin24OnQueryCvarValueFinishedEiP7edict_t21EQueryCvarValueStatusPKcS4_"
				}

				"SendCvarValueQueryToClient"
				{
					lib "engine"
					type "sym"
					sym  "_Z26SendCvarValueQueryToClientP7IClientPKcb"
				}

				"CBaseServer::RejectConnection"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseServer16RejectConnectionERK8netadr_siPKc"
				}

				"CBaseServer::CheckProtocol"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseServer13CheckProtocolER8netadr_sii"
				}

				"CServerPlugin::ClientSettingsChanged"
				{
					lib "engine"
					type "sym"
					sym  "_ZN13CServerPlugin21ClientSettingsChangedEP7edict_t"
				}
				"CGameRules::IsConnectedUserInfoChangeAllowed"
				{
					type "sym"
					sym  "_ZN10CGameRules32IsConnectedUserInfoChangeAllowedEP11CBasePlayer"
				}

				"CNetChan::SetFileTransmissionMode"
				{
					lib "engine"
					type "sym"
					sym  "_ZN8CNetChan23SetFileTransmissionModeEb"
				}

				"CSteam3Server::OnLogonSuccess"
				{
					lib "engine"
					type "sym"
					sym  "_ZN13CSteam3Server14OnLogonSuccessEP23SteamServersConnected_t"
				}

				"CCommandBuffer::Compact"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CCommandBuffer7CompactEv"
				}

				"CEconItemAttributeIterator_ApplyAttributeString::OnIterateAttributeValue"
				{
					type "sym"
					sym  "_ZN47CEconItemAttributeIterator_ApplyAttributeString23OnIterateAttributeValueEPK28CEconItemAttributeDefinitionRK17CAttribute_String"
				}

				"CAttributeIterator_GetTypedAttributeValue::OnIterateAttributeValue"
				{
					type "sym"
					sym  "_ZN41CAttributeIterator_GetTypedAttributeValueI17CAttribute_StringS0_E23OnIterateAttributeValueEPK28CEconItemAttributeDefinitionRKS0_"
				}

				"COM_CompressBuffer_LZSS"
				{
					lib "engine"
					type "sym"
					sym  "_Z23COM_CompressBuffer_LZSSPKvjPjj"
				}

				"COM_CompressBuffer_Snappy"
				{
					lib "engine"
					type "sym"
					sym  "_Z25COM_CompressBuffer_SnappyPKvjPjj"
				}

				"COM_BufferToBufferDecompress"
				{
					lib "engine"
					type "sym"
					sym  "_Z28COM_BufferToBufferDecompressPvPjPKvj"
				}

				"COM_GetUncompressedSize"
				{
					lib "engine"
					type "sym"
					sym  "_Z23COM_GetUncompressedSizePKvj"
				}

				"CBaseServer::CheckPassword"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseServer13CheckPasswordER8netadr_sPKcS3_"
				}

				"CBaseServer::ConnectClient"
				{
					lib "engine"
					type "sym"
					sym  "_ZN11CBaseServer13ConnectClientER8netadr_siiiiPKcS3_S3_i"
				}

				"CTFGameStats::Event_PlayerFiredWeapon"
				{
					type "sym"
					sym  "_ZN12CTFGameStats23Event_PlayerFiredWeaponEP9CTFPlayerb"
				}

				"Msg [vscript]"
				{
					lib "vscript"
					type "sym"
					sym  "Msg"
				}

				"Msg"
				{
					lib "tier0"
					type "sym"
					sym  "Msg"
				}

				"SQVM::Call"
				{
					lib "vscript"
					type "sym"
					sym64  "_ZN4SQVM4CallER11SQObjectPtrxxS1_y"
					sym  "_ZN4SQVM4CallER11SQObjectPtriiS1_j"
				}

				"CTestScriptMgr::CheckPoint"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CTestScriptMgr10CheckPointEPKc"
				}

				"TFMapsWorkshop"
				{
					type "sym"
					sym  "_Z14TFMapsWorkshopv"
				}
				"CTFMapsWorkshop::GetMapName"
				{
					type "sym"
					sym  "_ZN15CTFMapsWorkshop10GetMapNameEyR10CUtlString"
				}
				"CTFMapsWorkshop::FindOrCreateMapByNames"
				{
					type "sym"
					sym  "_ZN15CTFMapsWorkshop21FindOrCreateMapByNameEPKc"
				}
				"CTFWorkshopMap::GetLocalFile"
				{
					type "sym"
					sym  "_ZN14CTFWorkshopMap12GetLocalFileER10CUtlString"
				}
				"CTFWorkshopMap::OnUGCItemInstalled"
				{
					type "sym"
					sym  "_ZN14CTFWorkshopMap18OnUGCItemInstalledEP15ItemInstalled_t"
				}
				"CTFMapsWorkshop::AddMap"
				{
					type "sym"
					sym  "_ZN15CTFMapsWorkshop6AddMapEy"
				}
				"CTFMapsWorkshop::Steam_OnUGCItemInstalled"
				{
					type "sym"
					sym  "_ZN15CTFMapsWorkshop24Steam_OnUGCItemInstalledEP15ItemInstalled_t"
				}
				"CTFMapsWorkshop::PrepareLevelResources"
				{
					type "sym"
					sym  "_ZN15CTFMapsWorkshop21PrepareLevelResourcesEPcjS0_j"
					sym64 "_ZN15CTFMapsWorkshop21PrepareLevelResourcesEPcmS0_m"
				}
				"CDownloadListGenerator::OnResourcePrecachedFullPath"
				{
					lib "engine"
					type "sym"
					sym  "_ZN22CDownloadListGenerator27OnResourcePrecachedFullPathEPcPKc"
				}
				"CVEngineServer::FindMap"
				{
					lib "engine"
					type "sym"
					sym  "_ZN14CVEngineServer7FindMapEPci"
				}
				"CTFMapsWorkshop::Refresh"
				{
					type "sym"
					sym  "_ZN15CTFMapsWorkshop7RefreshEv"
				}
				
			}
			"addrs_group"
			{
				"[common]"
				{
					type "sym"
					lib  "server"
				}
				
				
				"UTIL_GetCommandClient"              "_Z21UTIL_GetCommandClientv"
				"UTIL_GetCommandClientIndex"         "_Z26UTIL_GetCommandClientIndexv"
				"UTIL_IsCommandIssuedByServerAdmin"  "_Z33UTIL_IsCommandIssuedByServerAdminv"
				"UTIL_PrecacheOther"                 "_Z18UTIL_PrecacheOtherPKcS0_"
				"UTIL_Remove [IServerNetworkable *]" "_Z11UTIL_RemoveP18IServerNetworkable"
				"UTIL_Remove [CBaseEntity *]"        "_Z11UTIL_RemoveP11CBaseEntity"
				
				"CTFTeamManager::GetTeam"     "_ZN14CTFTeamManager7GetTeamEi"
				"CTFTeamManager::IsValidTeam" "_ZN14CTFTeamManager11IsValidTeamEi"

				"CGameRules::DefaultFOV"   "_ZN10CGameRules10DefaultFOVEv"
				
				"CTeamplayRules::SetStalemate"   "_ZN14CTeamplayRules12SetStalemateEibb"
				"CTeamplayRules::SetWinningTeam" "_ZN14CTeamplayRules14SetWinningTeamEiibbbb"
				
				"CTFGameRules::CTFGameRules [C1]" "_ZN12CTFGameRulesC1Ev"
				"CTFGameRules::GetAssister" "_ZN12CTFGameRules11GetAssisterEP11CBasePlayerS1_P11CBaseEntity"
				"CTFGameRules::GetBonusRoundTime" "_ZN12CTFGameRules17GetBonusRoundTimeEb"

				"CEyeballBossIdle::OnStart" "_ZN16CEyeballBossIdle7OnStartEP12CEyeballBossP6ActionIS0_E
				"CEyeballBossIdle::OnStart" "_ZN16CEyeballBossIdle7OnStartEP12CEyeballBossP6ActionIS0_E"
				"CEyeballBossIdle::Update"  "_ZN16CEyeballBossIdle6UpdateEP12CEyeballBossf"

				"CEyeballBossDead::Update" "_ZN16CEyeballBossDead6UpdateEP12CEyeballBossf"

				"CZombieBehavior::OnKilled" "_ZN15CZombieBehavior8OnKilledEP7CZombieRK15CTakeDamageInfo"
				"CZombiePathCost::operator()" "_ZNK15CZombiePathCostclEP8CNavAreaS1_PK10CNavLadderPK13CFuncElevatorf"

				"CTeamplayRoundBasedRules::SetTeamRespawnWaveTime" "_ZN24CTeamplayRoundBasedRules22SetTeamRespawnWaveTimeEif"

				"CAttributeList::GetAttributeByID"       "_ZNK14CAttributeList16GetAttributeByIDEi"
				"CAttributeList::GetAttributeByName"     "_ZNK14CAttributeList18GetAttributeByNameEPKc"
				"CAttributeList::IterateAttributes"      "_ZNK14CAttributeList17IterateAttributesEP26IEconItemAttributeIterator"
				"CAttributeList::AddAttribute"           "_ZN14CAttributeList12AddAttributeEP18CEconItemAttribute"
				"CAttributeList::RemoveAttribute"        "_ZN14CAttributeList15RemoveAttributeEPK28CEconItemAttributeDefinition"
				"CAttributeList::RemoveAttributeByIndex" "_ZN14CAttributeList22RemoveAttributeByIndexEi"
				"CAttributeList::DestroyAllAttributes"   "_ZN14CAttributeList20DestroyAllAttributesEv"

				"CAttributeManager::IsProvidingTo" "_ZNK17CAttributeManager13IsProvidingToEP11CBaseEntity"
				
				"CPlayerInventory::DumpInventoryToConsole" "_ZN16CPlayerInventory22DumpInventoryToConsoleEb"
				"CPlayerInventory::GetMaxItemCount"        "_ZNK16CPlayerInventory15GetMaxItemCountEv"
				
				"CTFInventoryManager::GetInventoryForPlayer" "_ZN19CTFInventoryManager21GetInventoryForPlayerERK8CSteamID"
				
				"GetLoadoutPositionName"   "_Z22GetLoadoutPositionName19loadout_positions_t"
				"GetLoadoutPositionByName" "_Z24GetLoadoutPositionByNamePKc"
				
				"InventoryManager"   "_Z16InventoryManagerv"
				"TFInventoryManager" "_Z18TFInventoryManagerv"

				"CGameMovement::FullNoClipMove" "_ZN13CGameMovement14FullNoClipMoveEff"
				"CGameMovement::ResetGetPointContentsCache" "_ZN13CGameMovement26ResetGetPointContentsCacheEv"
				"CGameMovement::PlayerMove" "_ZN13CGameMovement10PlayerMoveEv"
				
				"CLagCompensationManager::BacktrackPlayer" "_ZN23CLagCompensationManager15BacktrackPlayerEP11CBasePlayerf"

				"SelectWeightedSequence" "_Z22SelectWeightedSequenceP10CStudioHdrii"
				"CTraceFilterIgnorePlayers::ShouldHitEntity" "_ZN25CTraceFilterIgnorePlayers15ShouldHitEntityEP13IHandleEntityi"
				
				"TE_PhysicsProp" "_Z14TE_PhysicsPropR16IRecipientFilterfiiRK6VectorRK6QAngleS3_ii"
				"TE_BreakModel" "_Z13TE_BreakModelR16IRecipientFilterfRK6VectorRK6QAngleS3_S3_iiifi"
				"TE_BeamLaser" "_Z12TE_BeamLaserR16IRecipientFilterfiiiiiifffifiiiii"
				"TE_BeamPoints" "_Z13TE_BeamPointsR16IRecipientFilterfPK6VectorS3_iiiifffifiiiii"

				"IgnoreActorsTraceFilterFunction" "_Z31IgnoreActorsTraceFilterFunctionP13IHandleEntityi"
				"CKickIssue::RequestCallVote" "_ZN10CKickIssue15RequestCallVoteEiPKcR20vote_create_failed_tRi"

				"UTIL_SetOrigin" "_Z14UTIL_SetOriginP11CBaseEntityRK6Vectorb"
				"UTIL_TraceEntity [IHandleEntity]" "_Z16UTIL_TraceEntityP11CBaseEntityRK6VectorS3_jPK13IHandleEntityiP10CGameTrace"

				"CEconItemSchema::Reset" "_ZN15CEconItemSchema5ResetEv"

				"CEconItemView::GetAnimationSlot" "_ZNK13CEconItemView16GetAnimationSlotEv"
				"CEconItemView::GetSkin" "_ZNK13CEconItemView7GetSkinEib"
				"CEconItemView::GetPlayerDisplayModel" "_ZNK13CEconItemView21GetPlayerDisplayModelEii"

				"CEconItemDefinition::GetActivityOverride" "_ZNK19CEconItemDefinition19GetActivityOverrideEi8Activity"
				"CEconItemDefinition::IterateAttributes" "_ZNK19CEconItemDefinition17IterateAttributesEP26IEconItemAttributeIterator"

				"CVoteController::TryCastVote" "_ZN15CVoteController11TryCastVoteEiPKc"

				"CCollisionEvent::PostCollision" "_ZN15CCollisionEvent13PostCollisionEP17vcollisionevent_t"

				"TE_FireBullets" "_Z14TE_FireBulletsiRK6VectorRK6QAngleiiifb"

				"CServerNetworkProperty::IsInPVS" "_ZN22CServerNetworkProperty7IsInPVSEPK18CCheckTransmitInfo"

				"CServerGameDLL::Shutdown" "_ZN14CServerGameDLL11DLLShutdownEv"

				"ClientData_Update" "_Z17ClientData_UpdateP11CBasePlayer"

				"GetCurrentSkyCamera" "_Z19GetCurrentSkyCamerav"
				
				"VScriptServerInit" "_Z17VScriptServerInitv"
				"VScriptRunScript" "_Z16VScriptRunScriptPKcP9HSCRIPT__b"
				"CServerGameDLL::GetServerBrowserMapOverride" "_ZN14CServerGameDLL27GetServerBrowserMapOverrideEv"
				
			}
			
			"addrs_group"
			{
				"[common]"
				{
					type "sym regex"
					lib  "server"
				}
				
				// Those functions are not worth using in detours over the original functions as of 24.04.2024
				// "CBaseTrigger::StartTouch [clone]" "_ZN12CBaseTrigger10StartTouchEP11CBaseEntity\\.part\\..*"
				// "UTIL_PlayerByIndex [clone]" "_Z18UTIL_PlayerByIndexi\\.part\\..*"
				// "CEconItemSchema::GetItemDefinitionByName [clone]" "_ZN15CEconItemSchema23GetItemDefinitionByNameEPKc\\.part\\..*"
				// "CTFPlayerShared::Burn [clone]" "_ZN15CTFPlayerShared4BurnEP9CTFPlayerP13CTFWeaponBasef\\.part\\..*"
				// "CTFGameRules::PlayerReadyStatus_UpdatePlayerState [clone]" "_ZN12CTFGameRules35PlayerReadyStatus_UpdatePlayerStateEP9CTFPlayerb\\.part\\..*"
				// "CTFGameRules::CanUpgradeWithAttrib [clone]" "_ZN12CTFGameRules20CanUpgradeWithAttribEP9CTFPlayeritP22CMannVsMachineUpgrades\\.part\\..*"
				// "Script_StringToFile [clone]" "_ZL19Script_StringToFilePKcS0_\\.part\\..*"
				// "GetNextCommandEntity [clone]" "_Z20GetNextCommandEntityP11CBasePlayerPKcP11CBaseEntity\\.part\\..*"

				"CTFGameRules::DropSpellPickup [clone]" "_ZNK12CTFGameRules15DropSpellPickupERK6Vectori\\.part\\..*"
				"CBaseObject::FindBuildPointOnPlayer [clone]" "_ZN11CBaseObject22FindBuildPointOnPlayerEP9CTFPlayerP11CBasePlayerRfR6Vector\\.part\\..*"
				"CTFPlayerShared::UpdateChargeMeter [clone]" "_ZN15CTFPlayerShared17UpdateChargeMeterEv\\.part\\..*"
				"PassServerEntityFilter [clone]" "_Z22PassServerEntityFilterPK13IHandleEntityS1_\\.part\\..*"
				"CTFPlayer::AddObject [clone]" "_ZN9CTFPlayer9AddObjectEP11CBaseObject\\.part\\..*"
				"CObjectTeleporter::PlayerCanBeTeleported [clone]" "_ZN17CObjectTeleporter21PlayerCanBeTeleportedEP9CTFPlayer\\.part\\..*"
				"CGameMovement::CheckFalling [clone]" "_ZN13CGameMovement12CheckFallingEv\\.part\\..*"
				"CVoteController::IsValidVoter [clone]" "_ZN15CVoteController12IsValidVoterEP11CBasePlayer\\.part\\..*"
				"CTFPlayerShared::PulseMedicRadiusHeal [clone]" "_ZN15CTFPlayerShared20PulseMedicRadiusHealEv\\.part\\..*"
				"CTriggerIgnite::BurnEntities [clone]" "_ZN14CTriggerIgnite12BurnEntitiesEv\\.part\\..*"
				"CVoteController::TryCastVote [clone]" "_ZN15CVoteController11TryCastVoteEiPKc\\.part\\..*"
				"CWeaponMedigun::CycleResistType [clone]" "_ZN14CWeaponMedigun15CycleResistTypeEv\\.part\\..*"
				"CUpgrades::ApplyUpgradeToItem [clone]" "_ZN9CUpgrades18ApplyUpgradeToItemEP9CTFPlayerP13CEconItemViewiibb\\.part\\..*"
				"CBaseAnimatingOverlay::FastRemoveLayer [clone]" "_ZN21CBaseAnimatingOverlay15FastRemoveLayerEi\\.part\\..*"
				"CTFGameRules::CalcDominationAndRevenge [clone]" "_ZN12CTFGameRules24CalcDominationAndRevengeEP9CTFPlayerP11CBaseEntityS1_bPi\\.part\\..*"
				"CTFPlayer::CanBuild [clone]" "_ZN9CTFPlayer8CanBuildEii\\.part\\..*"
				"CTriggerHurt::HurtEntity [clone]" "_ZN12CTriggerHurt10HurtEntityEP11CBaseEntityf\\.part\\..*"
				"CUpgrades::PlayerPurchasingUpgrade [clone]" "_ZN9CUpgrades23PlayerPurchasingUpgradeEP9CTFPlayeriibbb\\.part\\..*"
				"CTFKnife::CanPerformBackstabAgainstTarget [clone]" "_ZN8CTFKnife31CanPerformBackstabAgainstTargetEP9CTFPlayer\\.part\\..*"
				"CTFBotMainAction::Dodge [clone]" "_ZN16CTFBotMainAction5DodgeEP6CTFBot\\.part\\..*"
				"CTFPlayerShared::UpdateCloakMeter [clone]" "_ZN15CTFPlayerShared16UpdateCloakMeterEv\\.part\\..*"
				"CObjectSapper::ApplyRoboSapperEffects [clone]" "_ZN13CObjectSapper22ApplyRoboSapperEffectsEP9CTFPlayerf\\.part\\..*"
				"CTFPlayerShared::UpdateEnergyDrinkMeter [clone]" "_ZN15CTFPlayerShared22UpdateEnergyDrinkMeterEv\\.part\\..*"
				"CMultiPlayerAnimState::RestartGesture [clone]" "_ZN21CMultiPlayerAnimState14RestartGestureEi8Activityb\\.part\\..*"
				"CGameMovement::GetPointContentsCached [clone]" "_ZN13CGameMovement22GetPointContentsCachedERK6Vectori\\.part\\..*"
				"CPopulationManager::Initialize [clone]" "_ZN18CPopulationManager10InitializeEv\\.part\\..*"
				"CTFPlayerShared::SetItemChargeMeter [clone]" "_ZN15CTFPlayerShared18SetItemChargeMeterE19loadout_positions_tf\\.part\\..*"
				"CTFPlayer::ItemsMatch [clone]" "_ZN9CTFPlayer10ItemsMatchEP19TFPlayerClassData_tP13CEconItemViewS3_P13CTFWeaponBase\\.part\\..*"
				"CTFRadiusDamageInfo::ApplyToEntity [clone]" "_ZN19CTFRadiusDamageInfo13ApplyToEntityEP11CBaseEntity\\.part\\..*"
				
				"CBasePlayer::GetInVehicle [clone]" "_ZN11CBasePlayer12GetInVehicleEP14IServerVehiclei\\.part\\..*"
			}
			"addrs_group"
			{
				"[common]"
				{
					type "sym"
					lib  "engine"
				}
				
				"Int_CompareDeltas"	"_Z17Int_CompareDeltasPK8SendPropP7bf_readS3_"
				"Float_CompareDeltas"	"_Z19Float_CompareDeltasPK8SendPropP7bf_readS3_"
				"VectorXY_CompareDeltas"	"_Z22VectorXY_CompareDeltasPK8SendPropP7bf_readS3_"
				"Array_CompareDeltas"	"_Z19Array_CompareDeltasPK8SendPropP7bf_readS3_"
				"Vector_CompareDeltas"	"_Z20Vector_CompareDeltasPK8SendPropP7bf_readS3_"
				"String_CompareDeltas"	"_Z20String_CompareDeltasPK8SendPropP7bf_readS3_"
				"Int64_CompareDeltas"	"_Z19Int64_CompareDeltasPK8SendPropP7bf_readS3_"

				"CBaseClient::SetName"	"_ZN11CBaseClient7SetNameEPKc"
				"CBaseClient::UpdateSendState" "_ZN11CBaseClient15UpdateSendStateEv"
				"CBaseClient::SendSnapshot" "_ZN11CBaseClient12SendSnapshotEP12CClientFrame"
				"CBaseClient::UpdateAcknowledgedFramecount" "_ZN11CBaseClient28UpdateAcknowledgedFramecountEi"

				"CGameClient::SetupPackInfo" "_ZN11CGameClient13SetupPackInfoEP14CFrameSnapshot"
				"CGameClient::SetupPrevPackInfo" "_ZN11CGameClient17SetupPrevPackInfoEv"
				"CGameClient::GetSendFrame" "_ZN11CGameClient12GetSendFrameEv"
				
				"CParallelProcessor<CGameClient *>::Run" "_ZN18CParallelProcessorIP11CGameClient21CFuncJobItemProcessorIS1_EE3RunEPS1_jiP11IThreadPool"

				"CBaseServer::FillServerInfo" "_ZN11CBaseServer14FillServerInfoER14SVC_ServerInfo"
				
				"CGameServer::SendClientMessages" "_ZN11CGameServer18SendClientMessagesEb"
				"CGameServer::RemoveClientFromGame" "_ZN11CGameServer20RemoveClientFromGameEP11CBaseClient"

				"CVEngineServer::BuildEntityClusterList" "_ZN14CVEngineServer22BuildEntityClusterListEP7edict_tP9PVSInfo_t"
				"CVEngineServer::CheckAreasConnected" "_ZN14CVEngineServer19CheckAreasConnectedEii"

				"CMapReslistGenerator::RunFrame" "_ZN20CMapReslistGenerator8RunFrameEv"

				"Host_ShowIPCCallCount" "_Z21Host_ShowIPCCallCountv"
				"Host_CheckDumpMemoryStats" "_Z25Host_CheckDumpMemoryStatsv"

				"CUtlMemoryPool::Alloc [engine]" "_ZN14CUtlMemoryPool5AllocEv"
				"CUtlMemoryPool::Free [engine]" "_ZN14CUtlMemoryPool4FreeEPv"

				"CFrameSnapshotManager::GetPackedEntity" "_ZN21CFrameSnapshotManager15GetPackedEntityEP14CFrameSnapshoti"

				"SV_DetermineUpdateType" "_ZL22SV_DetermineUpdateTypeR16CEntityWriteInfo"

				"InvalidateSharedEdictChangeInfo" "_Z32InvalidateSharedEdictChangeInfosv"
				
			}
			"addrs_group"
			{
				"[common]"
				{
					type "sym regex"
					lib  "engine"
				}
				"Host_ShowIPCCallCount [clone]" "_Z21Host_ShowIPCCallCountv\\.part\\..*"
				"CHLTVDemoRecorder::StopRecording [clone]" "_ZN17CHLTVDemoRecorder13StopRecordingEv\\.part\\..*"
				
			}
		}
	}
	"#default"
	{
		"#supported"
		{
			engine "css"
			engine "ep1"
			engine "ep2"
			engine "hl2dm"
			engine "dods"
			engine "sdk2013"
			engine "l4d"
			engine "nd"
			engine "l4d2"
			engine "blade"
			engine "insurgency"
			engine "contagion"
			engine "bms"
			engine "doi"
			engine "pkvii"
		}
		"sigsegv"
		{
			"addrs"
			{
				"CGlobalEntityList::FindEntityByClassname"
				{
					type "sym"
					sym  "_ZN17CGlobalEntityList21FindEntityByClassnameEP11CBaseEntityPKc"
				}
				"CTeamplayRoundBasedRules::BroadcastSound"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules14BroadcastSoundEiPKci"
				}
				"CBaseProjectile::IsDestroyable"
				{
					type "sym"
					sym  "_ZN15CBaseProjectile13IsDestroyableEv"
				}
				"CCSBot::IsVisible"
				{
					type "sym"
					sym  "_ZNK6CCSBot9IsVisibleEP9CCSPlayerbPh"
				}
				"CCSBot::GetPartPosition"
				{
					type "sym"
					sym  "_ZNK6CCSBot15GetPartPositionEP9CCSPlayerNS_15VisiblePartTypeE"
				}
				"CCSBot::FindMostDangerousThreat"
				{
					type "sym"
					sym  "_ZN6CCSBot23FindMostDangerousThreatEv"
				}
				
			}
			"addrs_group"
			{
				"[common]"
				{
					type "sym"
					lib  "server"
				}
				"CTeam::GetName"       "_ZN5CTeam7GetNameEv"
				"CTeam::GetNumPlayers" "_ZN5CTeam13GetNumPlayersEv"
				"CTeam::GetPlayer"     "_ZN5CTeam9GetPlayerEi"
				"CTeam::GetTeamNumber" "_ZNK5CTeam13GetTeamNumberEv"
			}
			
		}
	}
	"#default"
	{
		"#supported"
		{
			engine "tf2"
		}
		"sigsegv"
		{
			
			"addrs"
			{
				"CGlobalEntityList::FindEntityByClassname"
				{
					type "pattern"
					sym  "_ZN17CGlobalEntityList21FindEntityByClassnameEP11CBaseEntityPKcP17IEntityFindFilter"
					seg  "text"
					seek "558bec5356578bf98b4d0885c974158b01ff50088b3081e6ff0f00004603f68b34f7eb068bb70400010085f674318b5d0c8b3e85ff75106880a47010ff1574f26a1083c404eb11395f5c741c538bcfe8ac9ffaff84c075108b760c85f675d25f5e33c05b5dc208008bc75f5e5b5dc20800"
					mask "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffffffff00000000ffff00000000ffffffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
				}
				"CTeamplayRoundBasedRules::BroadcastSound"
				{
					type "sym"
					sym  "_ZN24CTeamplayRoundBasedRules14BroadcastSoundEiPKciP11CBasePlayer"
				}
				"CBaseProjectile::IsDestroyable"
				{
					type "sym"
					sym  "_ZN15CBaseProjectile13IsDestroyableEb"
				}
			}
			"addrs_group"
			{
				"[common]"
				{
					type "sym"
					lib  "server"
				}
				"CTeam::GetName"       "_ZNK5CTeam7GetNameEv"
				"CTeam::GetNumPlayers" "_ZNK5CTeam13GetNumPlayersEv"
				"CTeam::GetPlayer"     "_ZNK5CTeam9GetPlayerEi"
				"CTeam::GetTeamNumber" "_ZNK5CTeam13GetTeamNumberEv"
			}
		}
	}

}
